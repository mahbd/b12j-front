{"version":3,"sources":["configuration.js","components/loadingAnimation.jsx","components/httpService.jsx","components/authService.jsx","context.js","store/webSocketReceive.jsx","store/api.js","apps/others/functions.js","store/basicReducerTemplate.js","store/data/contests.js","store/data/problems.js","store/data/users.js","store/data/submissions.js","store/data/tutorials.js","store/data/problemDiscussion.js","store/data/tutorialDiscussion.js","store/reducer.js","components/fields/input.jsx","components/fields/select.jsx","components/fields/codeEditor.jsx","components/fields/autocompleteSelect.jsx","components/fields/textEditor.jsx","components/fields/textArea.jsx","components/forms/baseForms.jsx","apps/user/firebase.js","components/forms/loginForm.jsx","apps/user/login.jsx","components/customTags.jsx","apps/user/userList.jsx","components/forms/registerForm.jsx","apps/user/register.jsx","apps/user/registrationSuccessful.jsx","components/forms/emailForm.jsx","apps/user/resendActivation.jsx","apps/user/resetPassword.jsx","apps/user/emailConfirmed.jsx","components/forms/resetPasswordForm.jsx","apps/user/resetPasswordGivePass.jsx","apps/user/userRoute.jsx","apps/others/home.jsx","main_css.jsx","apps/others/footer.js","components/helperFunctions.js","components/cards/contestCard.jsx","apps/contest/contestList.jsx","apps/contest/contest.jsx","apps/contest/standing.jsx","components/forms/contestForm.jsx","apps/contest/addEditContest.jsx","apps/contest/contestRoute.jsx","apps/problem/problemList.jsx","components/forms/problemCodeForm.jsx","apps/problem/problem.jsx","components/forms/problemForm.jsx","apps/problem/addEditProblem.jsx","components/forms/testCaseForm.jsx","apps/problem/addTestCase.jsx","apps/problem/testCaseList.jsx","apps/problem/problemRoute.jsx","apps/others/navBar.jsx","apps/submission/submissionList.jsx","apps/submission/submission.jsx","apps/submission/submissionRoute.jsx","apps/others/emailSent.jsx","apps/others/privacyPolicy.jsx","apps/others/othersRoute.jsx","apps/others/leftSideBar.jsx","apps/others/rightSideBar.jsx","apps/tutorial/tutorial.jsx","apps/tutorial/tutorialList.jsx","components/forms/tutorialForm.jsx","apps/tutorial/addEditTutorial.jsx","apps/tutorial/tutorialRoute.jsx","components/forms/changeUsernameForm.jsx","components/forms/changePasswordForm.jsx","apps/profile/profile.jsx","apps/profile/unsolvedProblems.jsx","apps/profile/profileTutorials.jsx","apps/profile/userProblems.jsx","apps/profile/userSubmissions.jsx","apps/profile/profileContest.jsx","apps/profile/testProblems.jsx","apps/profile/profileRoute.jsx","app.js","index.js","store/configureStore.js"],"names":["endpoint","process","BACK_END","document","domain","location","protocol","apiEndpoint","mainUrls","chat","home","contests","others","problems","restricted","submissions","tutorials","users","subUrls","addContest","addProblem","addTutorial","confirmEmail","editContest","editProblem","editTutorial","emailSent","login","logout","privacyPolicy","profile","register","registerSuccess","resetPassword","resetPasswordConfirm","confirmGoogleAuth","resendActivationEmail","testCases","addTestCases","userList","profileNav","mainProfile","unsolvedProblems","profileTutorials","profileProblems","profileSubmissions","profileContests","testProblems","urls","cf","cfProblems","cfStatics","standing","serverUrls","loginWithGoogle","googleAuthURL","googleAuthConfirmURL","refreshToken","updateUser","changeUsername","changePassword","verifyToken","test_cases","keys","startLoading","text","loading","getElementById","t","innerText","style","display","stopLoading","LoadingAnimation","id","className","getJwt","localStorage","getItem","axios","defaults","headers","common","interceptors","response","use","res","error","status","console","log","alert","Promise","reject","request","config","get","post","put","patch","delete","redirectURL","undefined","removeItem","window","reload","setJwt","jwt","setItem","setRefreshToken","getCurrentUser","jwtDecode","verifyUpdateAccessToken","httpService","token","catch","refresh","then","data","access","SuperContext","React","createContext","contest","contestActs","update","problem","problemActs","submission","submissionActs","user","userActs","tutorial","tutorialActs","WebSocketReceive","useContext","ws","addEventListener","e","JSON","parse","target","send","stringify","token_id","apiCallBegan","createAction","apiCallFailed","api","dispatch","next","action","a","type","payload","url","method","onSuccess","onError","onStart","onFailed","baseURL","message","dayjs","extend","calendar","extractDate","dateString","basicReducers","name","state","list","push","dict","results","i","length","receivedWithPagination","page","nextUrl","nextURL","offset","Math","ceil","getPageNumberFromLink","count","fetched","Date","now","total","receivedDiscussions","pid","parseInt","updatedWithPagination","basicActions","slice","store","start","requested","failure","requestFailed","_loadSection","section","setTimeout","getState","pending","_load","received","_loadById","pendingId","toSend","id_token","add","edit","getListPage","itemList","createSelector","items","objList","updated","getById","key","force","actions","this","added","createSlice","initialState","reducers","contestsReceived","contestActions","getAllList","fullList","totalPages","fetchedContests","contestList","contestId","result","sid","problem_char","problemActions","_loadContestProblems","pendingContests","contestProblemsReceived","contestProblems","info","loggedIn","loggedOut","userActions","loadUsers","getList","firstName","fullName","currentUser","submissionsReceived","submissionUpdated","submissionActions","tutorialActions","problemDiscussionActions","tutorialDiscussionActions","combineReducers","problemDiscussions","tutorialDiscussions","Input","label","rest","format","htmlFor","Select","options","value","map","option","CodeEditor","onChange","Fragment","newValue","currentTarget","width","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","setOptions","useWorker","AutocompleteSelect","isMulti","df","x","y","convertValue","input","modules","toolbar","container","header","script","color","background","align","handlers","image","editor","quill","range","getSelection","prompt","insertEmbed","index","TextEditor","useQuill","formats","quillRef","useEffect","firstChild","innerHTML","clipboard","dangerouslyPasteHTML","on","height","margin","ref","TextArea","BaseForm","errors","validate","Joi","object","schema","abortEarly","allowUnknown","details","item","path","validateProperty","obj","doSubmitHelper","redirect","lt","history","props","setState","handleSubmit","preventDefault","doSubmit","handleChange","errorMessage","cls","extra","disabled","valueKey","labelKey","newOptions","convertOptions","language_code","font","theme","mode","fontSize","Component","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","accessToken","username","LoginForm","string","required","min","max","alphanum","password","toggleLoginWithEmail","classList","toggle","onSubmit","renderInput","renderSubmitButton","renderButton","onClick","to","href","LoginWithGoogleButton","src","alt","Login","replace","Table","body","cell","floor","random","row","Verdict","verdict","UserList","first_name","last_name","UserListSingleRow","userId","RegisterForm","email","tlds","allow","re_password","toggleRegisterWithEmail","renderNonFieldError","Register","RegistrationSuccessful","EmailForm","ResendActivation","ResetPassword","EmailConfirmed","match","params","uid","ex","ResetPasswordForm","new_password","re_new_password","ResetPasswordGivePass","UserRoute","component","Home","duration","direction","css","heading4","navbar","tableSingle","hideOnPhone","Footer","d","getFullYear","toLocaleString","month","enumerate","iterable","arr","renderColX","cols","col","formatHtml","__html","FormattedHtml","dangerouslySetInnerHTML","pagination","pages","pageList","toString","getTimeDifference","end","dif","diff","hour","minute","hUnit","mUnit","ContestCard","prev","title","writers","testers","start_time","end_time","isSameOrBefore","date","ContestList","ended","upcoming","Contest","contestStart","contestEnd","is_staff","description","renderContestProblem","Standing","useState","duringContest","setDuringContest","afterContest","setAfterContest","apiCall","http","during","after","position","objectList","StandingTable","parseFloat","ContestForm","array","renderAutoCompleteSelect","renderTextEditor","AddEditContest","ContestRoute","ProblemList","renderProblemList","difficulty","ProblemCodeForm","language","code","renderSelect","renderCodeEditor","Problem","problemId","user_id","memory_limit","time_limit","notice","input_terms","output_terms","TestCases","test","inputs","output","ProblemForm","hidden_till","correct_code","correct_lang","number","example_number","languageOptions","memoryLimitOptions","timeLimitOptions","AddEditProblem","TestCaseForm","renderTextArea","AddTestCase","TestCaseList","setData","tests","ProblemRoute","NavBar","SubmissionList","submissionList","renderSubmissionList","problem_title","Submission","submissionId","setSubmission","err","renderSubmissionDetails","SubmissionRoute","EmailSent","PrivacyPolicy","OthersRoute","LeftSideBar","contestData","tutorialData","RightSideBar","Tutorial","tutorialId","by","TutorialList","renderTutorialList","TutorialForm","AddEditTutorial","TutorialRoute","ChangeUsernameForm","new_username","current_password","ChangePasswordForm","Profile","xmlns","fill","viewBox","elementId","element","toggleHide","UnsolvedProblems","unsolvedProblem","setUnsolvedProblem","unsolvedProblemData","ProfileTutorials","userTutorialList","setUserTutorialList","userTutorialData","UserProblems","userProbList","setUserProbList","userProblemData","UserSubmissions","userSubmissionList","setUserSubmissionList","userSubmissionData","ProfileContest","userContest","setUserContest","userContestData","TestProblems","testProblem","setTestProblem","testProblemData","ProfileRoute","exact","from","ProfileNav","App","setRefresh","unSub","subscribe","generateData","configureStore","reducer","middleware","getDefaultMiddleware","ReconnectingWebSocket","wssURL","maxReconnectionDelay","minReconnectionDelay","problemDiscussionActs","tutorialDiscussionActs","ParentApp","Provider","ReactDOM","render"],"mappings":"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","file":"static/js/main.ae468f34.chunk.js","sourcesContent":["const getEndpoint = () => {\r\n  if (process.env.BACK_END) {\r\n    return `https://${process.env.BACK_END}`;\r\n  } else if (document.domain === \"localhost\" || document.domain === \"127.0.0.1\") return \"http://127.0.0.1:8000\";\r\n  else if (document.domain === \"b12j.herokuapp.com\" || document.domain === \"b12j-api.herokuapp.com\") {\r\n    return `${document.location.protocol}//b12j-api.herokuapp.com`;\r\n  } else return \"https://api.b12j.ga\";\r\n};\r\n\r\nexport const endpoint = getEndpoint();\r\nexport const apiEndpoint = endpoint + \"/api\";\r\n\r\nexport const wssURL = () => {\r\n  const protocol = document.location.protocol === \"https:\" ? \"wss://\" : \"ws://\";\r\n  if (process.env.BACK_END) {\r\n    return `wss://${process.env.BACK_END}`;\r\n  } else if (document.domain === \"localhost\" || document.domain === \"127.0.0.1\") return protocol + \"127.0.0.1:8000/ws\";\r\n  else if (document.domain === \"b12j.herokuapp.com\" || document.domain === \"b12j-api.herokuapp.com\") {\r\n    return `${protocol}b12j-api.herokuapp.com/ws`;\r\n  }\r\n  return protocol + \"api.b12j.ga/ws\";\r\n};\r\n\r\nconst mainUrls = {\r\n  chat: \"/chat\",\r\n  home: \"/home\",\r\n  contests: \"/contests\",\r\n  others: \"/others\",\r\n  problems: \"/problems\",\r\n  restricted: \"/restricted\",\r\n  submissions: \"/submissions\",\r\n  tutorials: \"/tutorials\",\r\n  users: \"/users\"\r\n};\r\n\r\nconst subUrls = {\r\n  addContest: `${mainUrls.contests}/add`,\r\n  addProblem: `${mainUrls.problems}/add`,\r\n  addTutorial: `${mainUrls.tutorials}/add`,\r\n  confirmEmail: `${mainUrls.users}/activate`,\r\n  editContest: `${mainUrls.contests}/edit/`,\r\n  editProblem: `${mainUrls.problems}/edit`,\r\n  editTutorial: `${mainUrls.tutorials}/edit`,\r\n  emailSent: `${mainUrls.others}/email-sent`,\r\n  login: `${mainUrls.users}/login`,\r\n  logout: `${mainUrls.users}/logout`,\r\n  privacyPolicy: `${mainUrls.others}/privacy-policy`,\r\n  profile: `${mainUrls.users}/profile`,\r\n  register: `${mainUrls.users}/register`,\r\n  registerSuccess: `${mainUrls.users}/register-success`,\r\n  resetPassword: `${mainUrls.users}/reset-password`,\r\n  resetPasswordConfirm: `${mainUrls.users}/passwordResetConfirm`,\r\n  confirmGoogleAuth: `${mainUrls.users}/confirmGoogleAuth`,\r\n  resendActivationEmail: `${mainUrls.users}/resend-email`,\r\n  testCases: `${mainUrls.problems}/test_cases`,\r\n  addTestCases: `${mainUrls.problems}/test_cases/add`,\r\n  userList: `${mainUrls.users}/users`\r\n};\r\n\r\nconst profileNav = {\r\n  mainProfile: `${subUrls.profile}/mainProfile`,\r\n  unsolvedProblems: `${subUrls.profile}/unsolvedProblems`,\r\n  profileTutorials: `${subUrls.profile}/tutorials`,\r\n  profileProblems: `${subUrls.profile}/problems`,\r\n  profileSubmissions: `${subUrls.profile}/submissions`,\r\n  profileContests: `${subUrls.profile}/contests`,\r\n  testProblems: `${subUrls.profile}/testProblems`\r\n};\r\n\r\nexport const urls = {\r\n  cf: \"/cf\",\r\n  cfProblems: \"cf/problems\",\r\n  cfStatics: \"cf/statics\",\r\n  standing: \"/contests/standing\",\r\n  ...mainUrls,\r\n  ...subUrls,\r\n  ...profileNav\r\n};\r\n\r\nexport const serverUrls = {\r\n  login: \"/auth/jwt/create\",\r\n  loginWithGoogle: \"/auth/google/token\",\r\n  googleAuthURL: \"/auth/o/google-oauth2\",\r\n  googleAuthConfirmURL: \"/auth/o/google-oauth2\",\r\n  refreshToken: \"/auth/jwt/refresh\",\r\n  register: \"/auth/users\",\r\n  updateUser: \"/auth/users/me\",\r\n  resendActivationEmail: \"/auth/users/resend_activation\",\r\n  resetPassword: \"/auth/users/reset_password\",\r\n  changeUsername: \"/auth/users/set_username\",\r\n  changePassword: \"/auth/users/set_password\",\r\n  confirmEmail: \"/auth/users/activation\",\r\n  resetPasswordConfirm: \"/auth/users/reset_password_confirm\",\r\n  userList: \"/users\",\r\n  verifyToken: \"/auth/jwt/verify\",\r\n  submissions: \"/submissions\",\r\n  tutorials: \"/tutorials\",\r\n  problems: \"/problems\",\r\n  contests: \"/contests\",\r\n  test_cases: \"/test-cases\"\r\n};\r\n\r\nexport const keys = {\r\n  ACCESS: \"access\",\r\n  REFRESH: \"refresh\"\r\n};\r\n","import React from \"react\";\r\n\r\nconst LoadingAnimation = () => {\r\n  return <div id={\"loading-animation\"} className={\"loader-container\"}>\r\n    <div className=\"loader\" />\r\n    <p id={\"loading-text\"} className={\"text-success h3 loader-text text-center\"}>Loading</p>\r\n  </div>;\r\n};\r\n\r\nexport const startLoading = (text = null) => {\r\n  const loading = document.getElementById(\"loading-animation\");\r\n  if (text) {\r\n    const t = document.getElementById(\"loading-text\");\r\n    if (t) {\r\n      t.innerText = text;\r\n    }\r\n  } if (loading) loading.style.display = \"block\";\r\n};\r\n\r\nexport const stopLoading = () => {\r\n  const loading = document.getElementById(\"loading-animation\");\r\n  const t = document.getElementById(\"loading-text\");\r\n  loading.style.display = \"none\";\r\n  t.innerText = \"Loading\";\r\n};\r\n\r\nexport default LoadingAnimation;\r\n","import axios from \"axios\";\r\nimport { keys } from \"../configuration\";\r\nimport { startLoading, stopLoading } from \"./loadingAnimation\";\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(keys.ACCESS);\r\n}\r\nif (getJwt()) {\r\n   axios.defaults.headers.common[\"authorization\"] = \"Bearer \" + getJwt();\r\n}\r\n\r\naxios.interceptors.response.use(res => {\r\n   stopLoading();\r\n   return res;\r\n}, (error) => {\r\n   const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\r\n\r\n   if (!expectedError) {\r\n      console.log(\"Logging the error\", error);\r\n      alert(\"An unexpected error.\");\r\n   }\r\n   stopLoading();\r\n   return Promise.reject(error);\r\n});\r\n\r\naxios.interceptors.request.use((config) => {\r\n  startLoading();\r\n  return config;\r\n});\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n   get: axios.get,\r\n   post: axios.post,\r\n   put: axios.put,\r\n   patch: axios.patch,\r\n   delete: axios.delete,\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\nimport { apiEndpoint, keys, serverUrls, urls } from \"../configuration\";\r\nimport httpService from \"./httpService\";\r\n\r\nexport function logout(redirectURL = undefined) {\r\n  localStorage.removeItem(keys.ACCESS);\r\n  localStorage.removeItem(keys.REFRESH);\r\n  if (redirectURL) window.location = redirectURL;\r\n  else window.location.reload();\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(keys.ACCESS);\r\n}\r\n\r\nexport function setJwt(jwt) {\r\n  return localStorage.setItem(keys.ACCESS, jwt);\r\n}\r\n\r\nexport function setRefreshToken(refreshToken) {\r\n  return localStorage.setItem(keys.REFRESH, refreshToken);\r\n}\r\n\r\nexport const loginWithPassword = async (username, password) => {\r\n  httpService\r\n    .post(`${apiEndpoint}${serverUrls.login}/`, { username, password })\r\n    .then((response) => {\r\n      localStorage.setItem(keys.ACCESS, response.data.access);\r\n      localStorage.setItem(keys.REFRESH, response.data.refresh);\r\n      window.location = \"/\";\r\n    })\r\n    .catch((error) => {\r\n      alert(error.response.data.errors);\r\n    });\r\n};\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(keys.ACCESS);\r\n    return jwtDecode(jwt);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getRefreshToken() {\r\n  return localStorage.getItem(keys.REFRESH);\r\n}\r\n\r\n\r\nexport const refreshAccessToken = () => {\r\n  httpService.post(`${apiEndpoint}${serverUrls.refreshToken}/`, { refresh: getRefreshToken() })\r\n    .then(response => {\r\n      localStorage.setItem(keys.ACCESS, response.data.access);\r\n      window.location.reload();\r\n    }).catch(error => {\r\n      if (error.response && error.response.status === 401) {\r\n        logout(urls.login);\r\n      }\r\n  });\r\n};\r\n\r\nexport const verifyUpdateAccessToken = () => {\r\n  httpService.post(`${apiEndpoint}${serverUrls.verifyToken}/`, { token: getJwt() })\r\n    .catch(error => {\r\n      if (error.response && error.response.status === 401) {\r\n        refreshAccessToken();\r\n      }\r\n    });\r\n};","import React from \"react\";\r\n\r\nexport const SuperContext = React.createContext();\r\n","import React, { useContext } from \"react\";\r\nimport { SuperContext } from \"../context\";\r\nimport { getJwt } from \"../components/authService\";\r\nimport { stopLoading } from \"../components/loadingAnimation\";\r\n\r\nconst WebSocketReceive = () => {\r\n   const { ws, contestActs, problemActs, submissionActs, userActs, tutorialActs } = useContext(SuperContext);\r\n   ws.addEventListener(\"message\", (e) => {\r\n      const data = JSON.parse(e.data).data;\r\n      if (data.target === \"contest\") contest(contestActs, data);\r\n      if (data.target === \"problem\") problem(problemActs, data);\r\n      if (data.target === \"submission\") submission(submissionActs, data);\r\n      if (data.target === \"user\") user(userActs, data);\r\n      if (data.target === \"tutorial\") tutorial(tutorialActs, data);\r\n      if (data.target === \"login\") ws.send(JSON.stringify({ token_id: getJwt() || \"Blank\" }));\r\n   });\r\n\r\n   return <span />;\r\n};\r\n\r\nconst contest = (contestActs, data) => {\r\n   stopLoading()\r\n   contestActs.update(data);\r\n};\r\n\r\nconst problem = (problemActs, data) => {\r\n   stopLoading()\r\n   problemActs.update(data);\r\n};\r\n\r\nconst submission = (submissionActs, data) => {\r\n   stopLoading()\r\n   submissionActs.update(data);\r\n};\r\n\r\nconst user = (userActs, data) => {\r\n   stopLoading()\r\n   userActs.update(data);\r\n};\r\n\r\nconst tutorial = (tutorialActs, data) => {\r\n   stopLoading()\r\n   tutorialActs.update(data);\r\n};\r\n\r\nexport default WebSocketReceive;\r\n","import axios from \"axios\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { getJwt } from \"../components/authService\";\r\nimport { apiEndpoint } from \"../configuration\";\r\n\r\nexport const apiCallBegan = createAction(\"api/callBegan\");\r\n// export const apiCallSuccess = createAction(\"api/callSuccess\")\r\nexport const apiCallFailed = createAction(\"api/callFailed\");\r\naxios.defaults.headers.common[\"x-auth-token\"] = getJwt();\r\n\r\nconst api =\r\n   ({ dispatch }) =>\r\n   (next) =>\r\n   async (action) => {\r\n      if (action.type !== apiCallBegan.type) return next(action);\r\n      const { url, method, data, onSuccess, onError, onStart, onFailed } = action.payload;\r\n      if (onStart) {\r\n         dispatch({ type: onStart });\r\n      }\r\n      next(action);\r\n      try {\r\n         const response = await axios.request({\r\n            baseURL: apiEndpoint,\r\n            url,\r\n            method,\r\n            data,\r\n         });\r\n         if (onSuccess) {\r\n            dispatch({ type: onSuccess, payload: response.data });\r\n         }\r\n      } catch (error) {\r\n         if (onFailed) dispatch({ type: onFailed });\r\n         dispatch(apiCallFailed({ payload: error.message }));\r\n         if (onError) dispatch({ type: onError, payload: error.message });\r\n      }\r\n   };\r\nexport default api;\r\n","import calendar from \"dayjs/plugin/calendar\";\r\nimport dayjs from \"dayjs\";\r\nimport { parse } from \"query-string\";\r\n\r\ndayjs.extend(calendar);\r\n\r\nexport const getPageNumberFromLink = (nextURL) => {\r\n   const parsed = parse(nextURL);\r\n   const offset = parsed.offset;\r\n   const limit = 20;\r\n   return Math.ceil(offset / limit);\r\n};\r\n\r\nexport const extractDate = (dateString) => {\r\n   return dayjs(dateString).calendar();\r\n};\r\n\r\nexport const arrayEquality = (arr1, arr2) => {\r\n   if (arr1.length !== arr2.length) return false;\r\n   for (let i = 0; i < arr1.length; i++) {\r\n      if (arr1[i] !== arr2[i]) return false;\r\n   }\r\n   return true;\r\n};\r\n","import { apiCallBegan } from \"./api\";\r\nimport { serverUrls, urls } from \"../configuration\";\r\nimport { getPageNumberFromLink } from \"../apps/others/functions\";\r\nimport { getJwt } from \"../components/authService\";\r\nimport { createSelector } from \"reselect\";\r\nimport { startLoading } from \"../components/loadingAnimation\";\r\n\r\nexport const standardInitialState = () => {\r\n   return {\r\n      list: [],\r\n      dict: {},\r\n      fetched: {},\r\n      total: null,\r\n      loading: false,\r\n   };\r\n};\r\n\r\nexport const basicReducers = (name) => {\r\n   return {\r\n      [`${name}Added`]: (state, action) => {\r\n         state.list.push(action.payload.id);\r\n         state.dict[action.payload.id] = action.payload;\r\n         state.loading = false;\r\n      },\r\n\r\n      [`${name}Updated`]: (state, action) => {\r\n         if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\r\n         else {\r\n            state.dict[action.payload.id] = action.payload;\r\n            state.list.push(action.payload.id);\r\n         }\r\n         state.loading = false;\r\n      },\r\n\r\n      [`${name}sReceived`]: (state, action) => {\r\n         const data = action.payload.results;\r\n         state.list = [];\r\n         if (data) {\r\n            for (let i = 0; i < data.length; i++) {\r\n               state.dict[data[i].id] = data[i];\r\n               state.list.push(data[i].id);\r\n            }\r\n         }\r\n         state.loading = false;\r\n      },\r\n\r\n      [`${name}Requested`]: (state) => {\r\n         state.loading = true;\r\n      },\r\n\r\n      [`${name}RequestFailed`]: (state) => {\r\n         state.loading = false;\r\n      },\r\n   };\r\n};\r\n\r\nexport const receivedWithPagination = (state, action) => {\r\n   let page;\r\n   state.loading = false;\r\n   const nextUrl = action.payload.next;\r\n   if (!nextUrl) page = Math.ceil(action.payload.count / 20);\r\n   else page = getPageNumberFromLink(nextUrl);\r\n   state.fetched[page] = Date.now();\r\n   state.list[page] = [];\r\n   state.dict[page] = {};\r\n   state.total = Math.ceil(action.payload.count / 20);\r\n   const data = action.payload.results;\r\n   for (let i = 0; i < data.length; i++) {\r\n      state.dict[data[i].id] = data[i];\r\n      state.list[page].push(data[i].id);\r\n   }\r\n};\r\n\r\nexport const receivedDiscussions = (state, action, name) => {\r\n   const result = action.payload.results[0];\r\n   let pid = undefined;\r\n   if (result) pid = action.payload.results[0][name];\r\n\r\n   state.loading = false;\r\n   if (pid) {\r\n      pid = parseInt(pid);\r\n      state.fetched[pid] = Date.now();\r\n      state.list[pid] = [];\r\n      state.dict[pid] = {};\r\n      const data = action.payload.results;\r\n      for (let i = 0; i < data.length; i++) {\r\n         state.dict[data[i].id] = data[i];\r\n         state.list[pid].push(data[i].id);\r\n      }\r\n   }\r\n};\r\n\r\nexport const updatedWithPagination = (state, action) => {\r\n   state.dict[action.payload.id] = action.payload;\r\n   state.loading = false;\r\n};\r\n\r\nexport class basicActions {\r\n   constructor(slice, store, ws, name) {\r\n      const actions = slice.actions;\r\n      this.ws = ws;\r\n      this.store = store;\r\n      this.name = name;\r\n      this.added = actions[`${name}Added`];\r\n      this.requestFailed = actions[`${name}RequestFailed`];\r\n      this.requested = actions[`${name}Requested`];\r\n      this.received = actions[`${name}sReceived`];\r\n      this.updated = actions[`${name}Updated`];\r\n      this.pending = {};\r\n      this.pendingId = {};\r\n   }\r\n\r\n   start = () => {\r\n      this.store.dispatch({\r\n         type: this.requested.type,\r\n      });\r\n   };\r\n\r\n   failure = () => {\r\n      this.store.dispatch({\r\n         type: this.requestFailed.type,\r\n      });\r\n   };\r\n\r\n   _loadSection = (url, section) => {\r\n      setTimeout(() => startLoading(`Loading ${this.name}s`), 1);\r\n      if (this.store.getState()[`${this.name}s`].fetched[section] || this.pending[section]) return;\r\n      if (section < 1) {\r\n         alert(\"Wrong page\");\r\n         return;\r\n      }\r\n      this.pending[section] = Date.now();\r\n      this._load(url);\r\n   };\r\n\r\n   _load = (url = urls[`${this.name}s`] + \"/\") => {\r\n      this.store.dispatch(\r\n         apiCallBegan({\r\n            url: url,\r\n            onStart: this.requested.type,\r\n            onSuccess: this.received.type,\r\n            onFailed: this.requestFailed.type,\r\n         })\r\n      );\r\n   };\r\n\r\n   _loadById = (id) => {\r\n      startLoading(`Loading ${this.name} ID: ${id}`)\r\n      if (!this.pendingId[id]) {\r\n         this.pendingId[id] = Date.now();\r\n         const toSend = { method: \"GET\", target: this.name, id: id, id_token: getJwt() };\r\n         this.ws.send(JSON.stringify(toSend));\r\n         this.start();\r\n      }\r\n   };\r\n\r\n   add = (data) => {\r\n      const toSend = { method: \"POST\", target: this.name, data: data, id_token: getJwt() };\r\n      this.ws.send(JSON.stringify(toSend));\r\n      this.start();\r\n   };\r\n\r\n   edit = (data) => {\r\n      const toSend = { method: \"PUT\", target: this.name, id: data.id, data: data, id_token: getJwt() };\r\n      this.ws.send(JSON.stringify(toSend));\r\n      this.start();\r\n   };\r\n\r\n   getListPage = (page = 1) => {\r\n    page = parseInt(page);\r\n    const itemList = createSelector(\r\n      () => this.store.getState()[`${this.name}s`].list[page],\r\n      items => this.list(items)\r\n    )();\r\n    if (itemList.length === 0) {\r\n      this._loadSection(`${serverUrls[`${this.name}s`]}/?limit=20&offset=${(page - 1) * 20}`, page);\r\n    }\r\n    return itemList;\r\n  };\r\n\r\n   list = (objList) => {\r\n      if (!objList) return [];\r\n      let data = [];\r\n      const dict = this.store.getState()[`${this.name}s`].dict;\r\n      for (let i = 0; i < objList.length; i++) {\r\n         data.push(dict[objList[i]]);\r\n      }\r\n      return data;\r\n   };\r\n\r\n   update = (data) => {\r\n      this.store.dispatch({ type: this.updated.type, payload: data });\r\n   };\r\n\r\n   getById = (id, key = null, force=false) => {\r\n      const dict = this.store.getState()[`${this.name}s`].dict;\r\n      if (force && id) {\r\n         this._loadById(id);\r\n         return null;\r\n      }\r\n      if (key) {\r\n         if (dict[id]) return dict[id][key];\r\n         else if (id) this._loadById(id);\r\n      } else if (dict[id]) return dict[id];\r\n      if (id) this._loadById(id);\r\n      return null;\r\n   };\r\n}\r\n","import { basicActions, basicReducers, receivedWithPagination, standardInitialState } from \"../basicReducerTemplate\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst name = \"contest\";\r\n\r\nconst slice = createSlice({\r\n   name: `${name}s`,\r\n   initialState: {\r\n      ...standardInitialState(),\r\n   },\r\n   reducers: {\r\n      ...basicReducers(name),\r\n      contestsReceived: (state, action) => {\r\n         receivedWithPagination(state, action);\r\n      },\r\n   },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nexport class contestActions extends basicActions {\r\n   constructor(store, ws) {\r\n      super(slice, store, ws, name);\r\n   }\r\n\r\n   getAllList = () => {\r\n      let fullList = [];\r\n      for (let i = 1; i <= this.totalPages(); i++) {\r\n         fullList = [...fullList, ...this.getListPage(i)];\r\n      }\r\n      return fullList;\r\n   };\r\n\r\n   totalPages = () => {\r\n      return this.store.getState()[this.name + \"s\"].total | 1;\r\n   };\r\n}\r\n","import {\r\n  basicActions,\r\n  basicReducers,\r\n  standardInitialState,\r\n  receivedWithPagination,\r\n  updatedWithPagination\r\n} from \"../basicReducerTemplate\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegan } from \"../api\";\r\nimport { serverUrls } from \"../../configuration\";\r\n\r\nconst name = \"problem\";\r\n\r\nconst slice = createSlice({\r\n  name: `${name}s`,\r\n  initialState: {\r\n    ...standardInitialState(),\r\n    fetchedContests: {},\r\n    contestList: {},\r\n  },\r\n  reducers: {\r\n    ...basicReducers(name),\r\n    [`${name}sReceived`]: (state, action) => {\r\n      receivedWithPagination(state, action);\r\n    },\r\n    [`${name}Updated`]: (state, action) => {\r\n      updatedWithPagination(state, action);\r\n    },\r\n    contestProblemsReceived: (state, action) => {\r\n      state.loading = false;\r\n      const contestId = parseInt(action.payload.id);\r\n      state.fetchedContests[contestId] = Date.now();\r\n      state.contestList[contestId] = [];\r\n      state.dict[contestId] = {};\r\n      const { results } = action.payload;\r\n      if (!results) {\r\n        alert(\"Bug detected in API. Please contact admin.\")\r\n        return;\r\n      }\r\n      for (let result of results) {\r\n        state.dict[result.problem.id] = { ...result.problem, sid: result.problem_char, contestId: result.contest };\r\n        state.contestList[contestId].push(result.problem.id);\r\n      }\r\n    }\r\n  }\r\n});\r\nexport default slice.reducer;\r\n\r\nexport class problemActions extends basicActions {\r\n  constructor(store, ws) {\r\n    super(slice, store, ws, name);\r\n    this.contestProblemsReceived = slice.actions[\"contestProblemsReceived\"];\r\n    this.pendingContests = {};\r\n  }\r\n\r\n  getAllList = () => {\r\n    let fullList = [];\r\n    for (let i = 1; i <= (this.totalPages() || 1); i++) {\r\n      fullList = [...fullList, ...this.getListPage(i)];\r\n    }\r\n    return fullList;\r\n  };\r\n\r\n  _loadContestProblems = (contestId) => {\r\n    const url = `${serverUrls.contests}/${contestId}/problems/`;\r\n    if (this.store.getState()[`${this.name}s`].fetchedContests[contestId] || this.pendingContests[contestId]) return;\r\n    this.pendingContests[contestId] = Date.now();\r\n    this.store.dispatch(\r\n      apiCallBegan({\r\n        url: url,\r\n        onStart: this.requested.type,\r\n        onSuccess: this.contestProblemsReceived.type,\r\n        onFailed: this.requestFailed.type\r\n      })\r\n    );\r\n  };\r\n\r\n  contestProblems = (contestId = 1) => {\r\n    contestId = parseInt(contestId);\r\n    this._loadContestProblems(contestId);\r\n    return this.list(this.store.getState()[`${name}s`].contestList[contestId]);\r\n  };\r\n\r\n  totalPages = () => {\r\n    return this.store.getState()[`${name}s`].total;\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {createSelector} from \"reselect\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { basicActions, basicReducers, standardInitialState } from \"../basicReducerTemplate\";\r\nimport { serverUrls } from \"../../configuration\";\r\n\r\nconst name = \"user\";\r\nconst slice = createSlice({\r\n   name: `${name}s`,\r\n   initialState: {\r\n      ...standardInitialState(),\r\n      info: getCurrentUser(),\r\n   },\r\n   reducers: {\r\n      ...basicReducers(name),\r\n\r\n      loggedIn: (state, action) => {\r\n         state.info = action.payload;\r\n      },\r\n      loggedOut: (state) => {\r\n         state.info = null;\r\n      },\r\n   },\r\n});\r\nexport default slice.reducer;\r\n\r\nexport class userActions extends basicActions {\r\n   constructor(store, ws) {\r\n      super(slice, store, ws, name);\r\n   }\r\n\r\n   loadUsers = () => {\r\n      if (this.store.getState().users.loading) {\r\n         return;\r\n      }\r\n      this._load(`${serverUrls.userList}/?limit=1000`);\r\n   };\r\n\r\n   getList = () => {\r\n      const userList = createSelector(\r\n        () => this.store.getState()[`${name}s`].list,\r\n        users => this.list(users)\r\n      )()\r\n      if (userList.length === 0) this.loadUsers();\r\n      return userList;\r\n   };\r\n\r\n   firstName = (id) => {\r\n      return this.getById(id, \"first_name\");\r\n   };\r\n\r\n   fullName = (id) => {\r\n      if (!this.getById(id, \"first_name\") && !this.getById(id, \"last_name\")) {\r\n         return this.getById(id, \"username\");\r\n      }\r\n      return this.getById(id, \"first_name\") + \" \" + this.getById(id, \"last_name\");\r\n   };\r\n\r\n   currentUser = () => {\r\n      return this.store.getState()[`${this.name}s`].info;\r\n   };\r\n}\r\n","import {\r\n  basicActions,\r\n  basicReducers,\r\n  receivedWithPagination,\r\n  standardInitialState,\r\n  updatedWithPagination\r\n} from \"../basicReducerTemplate\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst name = \"submission\";\r\n\r\nconst slice = createSlice({\r\n  name: `${name}s`,\r\n  initialState: {\r\n    ...standardInitialState()\r\n  },\r\n  reducers: {\r\n    ...basicReducers(name),\r\n    submissionsReceived: (state, action) => {\r\n      receivedWithPagination(state, action);\r\n    },\r\n    submissionUpdated: (state, action) => {\r\n      updatedWithPagination(state, action);\r\n    }\r\n  }\r\n});\r\nexport default slice.reducer;\r\n\r\nexport class submissionActions extends basicActions {\r\n  constructor(store, ws) {\r\n    super(slice, store, ws, name);\r\n  }\r\n\r\n  // submissionDetails = (id) => {\r\n  //   const submission = this.getById(id);\r\n  //   if (submission) {\r\n  //     if (!submission.details) this._loadById(id);\r\n  //     else return submission.details;\r\n  //   }\r\n  //   return null;\r\n  // };\r\n\r\n  totalPages = () => {\r\n    return this.store.getState()[this.name + \"s\"].total;\r\n  };\r\n}\r\n","import {\r\n   basicActions,\r\n   basicReducers,\r\n   receivedWithPagination,\r\n   standardInitialState,\r\n   updatedWithPagination,\r\n} from \"../basicReducerTemplate\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst name = \"tutorial\";\r\n\r\nconst slice = createSlice({\r\n   name: `${name}s`,\r\n   initialState: {\r\n      ...standardInitialState(),\r\n   },\r\n   reducers: {\r\n      ...basicReducers(name),\r\n      [`${name}sReceived`]: (state, action) => {\r\n         receivedWithPagination(state, action);\r\n      },\r\n      [`${name}problemUpdated`]: (state, action) => {\r\n         updatedWithPagination(state, action);\r\n      },\r\n   },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nexport class tutorialActions extends basicActions {\r\n   constructor(store, ws) {\r\n      super(slice, store, ws, name);\r\n   }\r\n\r\n   getList = (page = 1) => {\r\n      page = parseInt(page);\r\n      this._loadSection(`/tutorials/?limit=20&offset=${(page - 1) * 20}`, page);\r\n      return this.list(this.store.getState().tutorials.list[page]);\r\n   };\r\n\r\n   totalPages = () => {\r\n      return this.store.getState()[this.name + \"s\"].total;\r\n   };\r\n}\r\n","import {\r\n   basicActions,\r\n   basicReducers,\r\n   receivedDiscussions,\r\n   standardInitialState,\r\n   updatedWithPagination,\r\n} from \"../basicReducerTemplate\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst name = \"problemDiscussion\";\r\n\r\nconst slice = createSlice({\r\n   name: `${name}s`,\r\n   initialState: {\r\n      ...standardInitialState(),\r\n   },\r\n   reducers: {\r\n      ...basicReducers(name),\r\n      [`${name}sReceived`]: (state, action) => {\r\n         receivedDiscussions(state, action, \"problem\");\r\n      },\r\n      [`${name}Updated`]: (state, action) => {\r\n         updatedWithPagination(state, action);\r\n      },\r\n   },\r\n});\r\nexport default slice.reducer;\r\n\r\nexport class problemDiscussionActions extends basicActions {\r\n   constructor(store, ws) {\r\n      super(slice, store, ws, name);\r\n   }\r\n\r\n   getList = (problem = 1) => {\r\n      problem = parseInt(problem);\r\n      this._loadSection(`/problems/${problem}/comments/?limit=1000`, problem);\r\n      return this.list(this.store.getState()[`${name}s`].list[problem]);\r\n   };\r\n\r\n   totalPages = () => {\r\n      return this.store.getState()[`${name}s`].total;\r\n   };\r\n}\r\n","import {\r\n   basicActions,\r\n   basicReducers,\r\n   receivedDiscussions,\r\n   standardInitialState,\r\n   updatedWithPagination,\r\n} from \"../basicReducerTemplate\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst name = \"tutorialDiscussion\";\r\n\r\nconst slice = createSlice({\r\n   name: `${name}s`,\r\n   initialState: {\r\n      ...standardInitialState(),\r\n   },\r\n   reducers: {\r\n      ...basicReducers(name),\r\n      [`${name}sReceived`]: (state, action) => {\r\n         receivedDiscussions(state, action, \"tutorial\");\r\n      },\r\n      [`${name}Updated`]: (state, action) => {\r\n         updatedWithPagination(state, action);\r\n      },\r\n   },\r\n});\r\nexport default slice.reducer;\r\n\r\nexport class tutorialDiscussionActions extends basicActions {\r\n   constructor(store, ws) {\r\n      super(slice, store, ws, name);\r\n   }\r\n\r\n   getList = (tutorial = 1) => {\r\n      tutorial = parseInt(tutorial);\r\n      this._loadSection(`/tutorials/${tutorial}/comments/?limit=1000`, tutorial);\r\n      return this.list(this.store.getState()[`${name}s`].list[tutorial]);\r\n   };\r\n\r\n   totalPages = () => {\r\n      return this.store.getState()[`${name}s`].total;\r\n   };\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport contests from \"./data/contests\";\r\nimport problems from \"./data/problems\";\r\nimport users from \"./data/users\";\r\nimport submissions from \"./data/submissions\";\r\nimport tutorials from \"./data/tutorials\";\r\nimport problemDiscussions from \"./data/problemDiscussion\";\r\nimport tutorialDiscussions from \"./data/tutorialDiscussion\";\r\n\r\nexport default combineReducers({\r\n   contests,\r\n   problems,\r\n   problemDiscussions,\r\n   submissions,\r\n   tutorials,\r\n   tutorialDiscussions,\r\n   users,\r\n});\r\n","import React from \"react\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  if (rest['type'] === \"datetime-local\") {\r\n    if (rest['value']) {\r\n      rest['value'] = dayjs(rest['value']).format(\"YYYY-MM-DDTHH:MM\")\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-select\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-min-noconflict/mode-c_cpp.js\";\r\nimport \"ace-builds/src-min-noconflict/mode-python.js\";\r\nimport \"ace-builds/src-min-noconflict/theme-gob.js\";\r\nimport \"ace-builds/src-min-noconflict/theme-chrome.js\";\r\nimport \"ace-builds/src-min-noconflict/ext-language_tools.js\";\r\nimport \"ace-builds/src-min-noconflict/snippets/c_cpp.js\";\r\nimport \"ace-builds/src-min-noconflict/snippets/python.js\";\r\n\r\nconst CodeEditor = ({ name, label, onChange, error, ...rest }) => {\r\n  const onChangeCode = (newValue) => {\r\n    onChange({ currentTarget: { name, value: newValue } });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <label htmlFor={name}>{label}</label>\r\n      <AceEditor {...rest}\r\n        onChange={onChangeCode}\r\n        name={name}\r\n        width={\"100%\"}\r\n        enableBasicAutocompletion={true}\r\n        enableLiveAutocompletion={true}\r\n        enableSnippets={true}\r\n        setOptions={{\r\n          useWorker: false\r\n        }}\r\n      />\r\n      {error && <div className={\"alert-danger\"}>{error}</div>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CodeEditor","import React from \"react\";\r\nimport ReactSelect from \"react-select\";\r\n\r\nexport const AutocompleteSelect = ({ name, label, options, onChange, value, error, isMulti, ...rest }) => {\r\n\r\n   const handleChange = (input) => {\r\n      let value;\r\n      if (isMulti) {\r\n         value = [];\r\n         for (let i = 0; i < input.length; i++) {\r\n            value.push(input[i].value);\r\n         }\r\n      } else {\r\n         value = input.value;\r\n      }\r\n      onChange({ currentTarget: { value, name } });\r\n   };\r\n\r\n   const convertValue = () => {\r\n      let df = false;\r\n      if (isMulti && value) {\r\n         df = [];\r\n         for (let x of value) {\r\n            for (let y of options) {\r\n               if (y.value === x) {\r\n                  df.push(y);\r\n                  break;\r\n               }\r\n            }\r\n         }\r\n      } else if (!isMulti && value) {\r\n         for (let x of options) {\r\n            if (x.value === value) {\r\n               df = x;\r\n               break;\r\n            }\r\n         }\r\n      }\r\n      return df;\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         <label htmlFor={name}>{label}</label>\r\n         <ReactSelect\r\n            value={convertValue()}\r\n            isMulti={isMulti}\r\n            name={name}\r\n            label={label}\r\n            options={options}\r\n            onChange={handleChange}\r\n            {...rest}\r\n         />\r\n         {error && <div className=\"alert-danger\">{error}</div>}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default AutocompleteSelect","import React, { useEffect } from \"react\";\r\nimport { useQuill } from \"react-quilljs\";\r\n\r\n\r\nconst modules = {\r\n  toolbar: {\r\n    container: [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n      [\"blockquote\", \"code\"],\r\n      [\"link\", \"image\"],\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n      [{ script: \"sub\" }, { script: \"super\" }],\r\n      [{ color: [] }, { background: [] }],\r\n      [{ align: [] }]\r\n    ],\r\n    handlers: {\r\n      image: function() {\r\n        const editor = this.quill;\r\n        const range = editor.getSelection();\r\n        const value = prompt(\"Please paste the image url here.\");\r\n        if (value) {\r\n          editor.insertEmbed(range.index, \"image\", value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst TextEditor = ({ name, label, onChange, value, error }) => {\r\n  const { quill, quillRef } = useQuill({ modules, formats: {} });\r\n\r\n  useEffect(() => {\r\n    if (quill && value && value !== quill.container.firstChild.innerHTML) {\r\n      quill.clipboard.dangerouslyPasteHTML(value);\r\n    }\r\n  }, [value, quill]);\r\n\r\n  useEffect(() => {\r\n    if (quill) {\r\n      quill.on(\"text-change\", () => {\r\n        onChange({ currentTarget: { value: quill.container.firstChild.innerHTML, name } });\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [quill]);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"auto\", margin: \"0.2rem\" }}>\r\n      <label htmlFor={name}>{label}</label>\r\n      <div id={name} ref={quillRef} />\r\n      {error && <div className=\"alert-danger\">{error}</div>}\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextEditor;\r\n","import React from \"react\";\r\n\r\nconst TextArea = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <textarea {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;","import React, { Component } from \"react\";\r\nimport Input from \"../fields/input\";\r\nimport Select from \"../fields/select\";\r\nimport Joi from \"joi\";\r\nimport CodeEditor from \"../fields/codeEditor\";\r\nimport AutocompleteSelect from \"../fields/autocompleteSelect\";\r\nimport TextEditor from \"../fields/textEditor\";\r\nimport httpService from \"../httpService\";\r\nimport { startLoading } from \"../loadingAnimation\";\r\nimport { apiEndpoint } from \"../../configuration\";\r\nimport TextArea from \"../fields/textArea\";\r\n\r\nclass BaseForm extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const { error } = Joi.object(this.schema).validate(this.state.data, { abortEarly: false, allowUnknown: true });\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.object(schema).validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  doSubmitHelper = async (url, redirect, lt) => {\r\n    const { history } = this.props;\r\n    const { data } = this.state;\r\n    try {\r\n      if (lt) {\r\n        startLoading(lt);\r\n      }\r\n      if (data.id) {\r\n        await httpService.put(`${apiEndpoint}${url}/${data.id}/`, data);\r\n        if (redirect) {\r\n          window.location = `${redirect}/${data.id}`\r\n        }\r\n      } else {\r\n        const res = await httpService.post(apiEndpoint + url + \"/\", data);\r\n        if (redirect) {\r\n          history.push(`${redirect}/${res.data.id}`);\r\n        }\r\n      }\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors, ...ex.response.data };\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label, cls = \"btn btn-primary\", extra = {}) {\r\n    return (\r\n      <button className={cls} type={\"button\"} {...extra}>\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSubmitButton(label, cls = \"btn btn-primary\", extra = {}) {\r\n    return (\r\n      <button disabled={this.validate()} className={cls} {...extra} type={\"submit\"}>\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  convertOptions(options, valueKey, labelKey) {\r\n    const newOptions = [];\r\n    for (let x of options) {\r\n      newOptions.push({ value: x[valueKey], label: x[labelKey] });\r\n    }\r\n    return newOptions;\r\n  }\r\n\r\n  renderSelect(name, label, options, valueKey = \"value\", labelKey = \"name\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={this.convertOptions(options, valueKey, labelKey)}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderAutoCompleteSelect(name, label, options, valueKey = \"value\", labelKey = \"name\", isMulti = false) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <AutocompleteSelect\r\n        name={name}\r\n        label={label}\r\n        options={this.convertOptions(options, valueKey, labelKey)}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n        onChange={this.handleChange}\r\n        isMulti={isMulti}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTextArea(name, label) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <TextArea\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderNonFieldError() {\r\n    if (this.state.errors[\"non_field_errors\"]) {\r\n      return <div className=\"alert alert-danger\">{this.state.errors[\"non_field_errors\"]}</div>;\r\n    }\r\n  };\r\n\r\n  renderCodeEditor(name, label, language_code=\"language\") {\r\n    const { font, theme } = this.state.data;\r\n    return <CodeEditor\r\n      name={name}\r\n      label={label}\r\n      value={this.state.data[name]}\r\n      error={this.state.errors[name]}\r\n      mode={this.state.data[language_code] || \"python\"}\r\n      fontSize={font || \"15px\"}\r\n      theme={theme || \"chrome\"}\r\n      onChange={this.handleChange}\r\n    />;\r\n  };\r\n\r\n  renderTextEditor(name, label) {\r\n\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <TextEditor\r\n        name={name}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n      />);\r\n  }\r\n}\r\n\r\nexport default BaseForm;","import {initializeApp} from \"firebase/app\";\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    getAuth,\r\n    GoogleAuthProvider,\r\n    sendPasswordResetEmail,\r\n    signInWithEmailAndPassword,\r\n    signInWithPopup,\r\n    signOut,\r\n} from \"firebase/auth\";\r\nimport {startLoading} from \"../../components/loadingAnimation\";\r\nimport httpService from \"../../components/httpService\";\r\nimport {apiEndpoint, serverUrls, urls} from \"../../configuration\";\r\nimport {setJwt, setRefreshToken} from \"../../components/authService\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDZVuWrICZEbDPOranIvUSN5iAWNNZm-XA\",\r\n    authDomain: \"b12j-35db3.firebaseapp.com\",\r\n    projectId: \"b12j-35db3\",\r\n    storageBucket: \"b12j-35db3.appspot.com\",\r\n    messagingSenderId: \"614885379767\",\r\n    appId: \"1:614885379767:web:f23b0c78e37d19e86b0732\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst signInWithGoogle = async () => {\r\n    try {\r\n        const res = await signInWithPopup(auth, googleProvider);\r\n        const accessToken = res.user.accessToken;\r\n\r\n        try {\r\n            startLoading(\"Syncing with server...\");\r\n            const res = await httpService.post(`${apiEndpoint}${serverUrls.loginWithGoogle}/`,\r\n                {\"id_token\": accessToken}\r\n            );\r\n            const {access, refresh} = res.data;\r\n            setJwt(access);\r\n            setRefreshToken(refresh);\r\n            window.location = urls.profile\r\n        } catch (ex) {\r\n            if (ex.response && (ex.response.status === 400 || ex.response.status === 401)) {\r\n                const errors = {...this.state.errors, username: \"Synchronization failed!. Try again later.\"};\r\n                this.setState({errors});\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\n    try {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n    try {\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst sendPasswordReset = async (email) => {\r\n    try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        alert(\"Password reset link sent!\");\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst logout = () => {\r\n    signOut(auth);\r\n};\r\n\r\nexport {\r\n    auth,\r\n    signInWithGoogle,\r\n    logInWithEmailAndPassword,\r\n    registerWithEmailAndPassword,\r\n    sendPasswordReset,\r\n    logout,\r\n};","import React from \"react\";\r\nimport BaseForm from \"./baseForms\";\r\nimport Joi from \"joi\";\r\nimport {apiEndpoint, endpoint, serverUrls, urls} from \"../../configuration\";\r\nimport httpService from \"../httpService\";\r\nimport {setJwt, setRefreshToken} from \"../authService\";\r\nimport {startLoading} from \"../loadingAnimation\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {signInWithGoogle} from \"../../apps/user/firebase\";\r\n\r\nclass LoginForm extends BaseForm {\r\n    state = {\r\n        data: {},\r\n        errors: {}\r\n    };\r\n    schema = {\r\n        username: Joi.string().required().min(3).max(32).alphanum().label(\"Username\"),\r\n        password: Joi.string().required().min(4).max(32)\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            startLoading(\"Checking username and password\");\r\n            const res = await httpService.post(`${apiEndpoint}${serverUrls.login}/`, {...this.state.data});\r\n            const {access, refresh} = res.data;\r\n            setJwt(access);\r\n            setRefreshToken(refresh);\r\n            window.location = urls.profile\r\n        } catch (ex) {\r\n            if (ex.response && (ex.response.status === 400 || ex.response.status === 401)) {\r\n                const errors = {...this.state.errors, username: \"No active account found with the given credentials\"};\r\n                this.setState({errors});\r\n            }\r\n        }\r\n    };\r\n\r\n    toggleLoginWithEmail = () => {\r\n        document.getElementById(\"login-form\").classList.toggle(\"d-none\");\r\n        document.getElementById(\"login-form-button\").classList.toggle(\"d-none\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form className={\"one-form\"} onSubmit={this.handleSubmit} method=\"post\">\r\n                    <div className={\"blank20\"}/>\r\n                    <LoginWithGoogleButton/>\r\n                    <p className={\"text-center pt-2 pb-2\"}>or</p>\r\n                    <div id={\"login-form\"} className={\"d-none\"}>\r\n                        {this.renderInput(\"username\", \"Username\")}\r\n                        {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                        {this.renderSubmitButton(\"Login\", \"btn btn-success form-btn\")}\r\n                    </div>\r\n                    <div id={\"login-form-button\"}>\r\n                        {this.renderButton(\"Login with email\", \"btn btn-primary form-btn\",\r\n                            {onClick: this.toggleLoginWithEmail})}\r\n                    </div>\r\n                    <p>New user <Link to={urls.register} className=\"text-success\">register</Link></p>\r\n                    <a href={`${endpoint}/accounts/password_reset/`} className=\"text-danger\">Forgot password?</a>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n\r\nconst LoginWithGoogleButton = () => {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-info form-btn\" onClick={signInWithGoogle}>\r\n            <img style={{height: \"90%\"}} src=\"https://img.icons8.com/color/16/000000/google-logo.png\"\r\n                 alt=\"google\"/> Login with Google\r\n        </button>\r\n    );\r\n}","import React from \"react\";\r\nimport LoginForm from \"../../components/forms/loginForm\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { urls } from \"../../configuration\";\r\n\r\nconst Login = ({history}) => {\r\n  if (getCurrentUser()) {\r\n    history.replace(urls.profile);\r\n  }\r\n  return (\r\n    <div className={\"one-form\"}>\r\n      <LoginForm history={history} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nexport const Table = ({ headers, body }) => (\r\n  <table className=\"table table-bordered table-striped\">\r\n    <thead>\r\n    <tr>\r\n      {headers.map((cell) => (\r\n        <th key={Math.floor(Math.random() * 10000)}>{cell}</th>\r\n      ))}\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    {body.map((row) => (\r\n      <tr key={Math.floor(Math.random() * 1000000) + Math.floor(Math.random() * 1000000)}>\r\n        {row.map((cell) => (\r\n          <td key={Math.floor(Math.random() * 1000000) + Math.floor(Math.random() * 1000000)}>{cell}</td>\r\n        ))}\r\n      </tr>\r\n    ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport const Verdict = ({ verdict }) => {\r\n  if (verdict === \"AC\") return <span className=\"text-success\">Accepted</span>;\r\n  if (verdict === \"WA\") return <span className=\"text-danger\">Wrong Answer</span>;\r\n  if (verdict === \"CE\") return <span className=\"text-danger\">Compilation Error</span>;\r\n  if (verdict === \"TLE\") return <span className=\"text-danger\">Time Limit Exceed</span>;\r\n  if (verdict === \"PJ\") return <span className=\"text-info\">Judging.</span>;\r\n  if (verdict === \"FJ\") return <span className=\"text-danger\">Failed.</span>;\r\n  return <span>Unknown verdict</span>;\r\n};\r\n","import React, { useContext} from \"react\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { Table } from \"../../components/customTags\";\r\n\r\nconst UserList = () => {\r\n  const { userActs } = useContext(SuperContext);\r\n  const data = [];\r\n\r\n  console.log(\"Running user\")\r\n\r\n  for (let user of userActs.getList()) {\r\n    data.push([user.id, user.username, user.first_name, user.last_name]);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Table headers={[\"User id\", \"Username\", \"First Name\", \"Last Name\"]} body={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\nexport const UserListSingleRow = ({ users, userActs }) => {\r\n  return users.map((userId) => (\r\n    <p className=\"user\" key={userId}>\r\n      {userActs.fullName(userId)}\r\n    </p>\r\n  ));\r\n};\r\n","import React from \"react\";\r\nimport BaseForm from \"./baseForms\";\r\nimport Joi from \"joi\";\r\nimport {apiEndpoint, serverUrls, urls} from \"../../configuration\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {startLoading} from \"../loadingAnimation\";\r\nimport httpService from \"../httpService\";\r\nimport {signInWithGoogle} from \"../../apps/user/firebase\";\r\n\r\nclass RegisterForm extends BaseForm {\r\n    state = {\r\n        data: {},\r\n        errors: {}\r\n    };\r\n    schema = {\r\n        username: Joi.string().required().min(3).max(32).alphanum().label(\"Username\"),\r\n        email: Joi.string().email({tlds: {allow: [\"com\", \"edu\"]}}),\r\n        first_name: Joi.string().alphanum().required().min(2).max(15),\r\n        last_name: Joi.string().alphanum().required().min(2).max(15),\r\n        password: Joi.string().required().min(4).max(32),\r\n        re_password: Joi.string().required().min(4).max(32),\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            startLoading(\"Registering\");\r\n            await httpService.post(`${apiEndpoint}${serverUrls.register}/`, {...this.state.data});\r\n            this.props.history.replace(urls.registerSuccess);\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = {...this.state.errors, ...ex.response.data};\r\n                this.setState({errors});\r\n            }\r\n        }\r\n    };\r\n\r\n    toggleRegisterWithEmail = () => {\r\n        document.getElementById(\"register-form\").classList.toggle(\"d-none\");\r\n        document.getElementById(\"register-form-button\").classList.toggle(\"d-none\");\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <form className={\"one-form\"} onSubmit={this.handleSubmit} method=\"post\">\r\n                    <LoginWithGoogleButton/>\r\n                    <p className={\"text-center pt-2 pb-2\"}>or</p>\r\n                    <div id={\"register-form\"} className={\"d-none\"}>\r\n                        <div className={\"blank20\"}/>\r\n                        {this.renderNonFieldError()}\r\n                        {this.renderInput(\"username\", \"Username\")}\r\n                        {this.renderInput(\"email\", \"Email Address\", \"email\")}\r\n                        {this.renderInput(\"first_name\", \"First Name\")}\r\n                        {this.renderInput(\"last_name\", \"Last Name\")}\r\n                        {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                        {this.renderInput(\"re_password\", \"Re Type Password\", \"password\")}\r\n                        {this.renderSubmitButton(\"Register\", \"btn btn-success form-btn\")}\r\n                    </div>\r\n                        <div id={\"register-form-button\"}>\r\n                        {this.renderButton(\"Register with email\", \"btn btn-primary form-btn\",\r\n                            {onClick: this.toggleRegisterWithEmail})}\r\n                    </div>\r\n                    <p>Registered but not activated <Link to={urls.resendActivationEmail}\r\n                                                          className=\"text-success\">resend email</Link></p>\r\n                    <p>Already have account <Link to={urls.login} className=\"text-success\">login</Link></p>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n\r\nconst LoginWithGoogleButton = () => {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-info form-btn\" onClick={signInWithGoogle}>\r\n            <img style={{height: \"90%\"}} src=\"https://img.icons8.com/color/16/000000/google-logo.png\"\r\n                 alt=\"google\"/> Register with Google\r\n        </button>\r\n    );\r\n}","import React from \"react\";\r\nimport RegisterForm from \"../../components/forms/registerForm\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { urls } from \"../../configuration\";\r\n\r\nconst Register = ({ history }) => {\r\n  if (getCurrentUser()) {\r\n    history.replace(urls.profile);\r\n  }\r\n  return (\r\n    <div className={\"one-form\"}>\r\n      <RegisterForm history={history} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","import React from \"react\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { urls } from \"../../configuration\";\r\n\r\nconst RegistrationSuccessful = ({history}) => {\r\n  if (getCurrentUser()) {\r\n    history.replace(urls.profile);\r\n  }\r\n  return (\r\n    <div className={\"container\"}>\r\n      <div className=\"alert alert-success\">\r\n        <strong>Registration Successful!</strong>\r\n      </div>\r\n      <div className=\"alert alert-info\">\r\n        <p>An activation email is sent to your email address. Please confirm your email address by\r\n          visiting the sent link. Don't forget to check your spam folder.</p>\r\n      </div>\r\n      <div className=\"alert alert-warning\">\r\n        <p>You won't be able to login before confirming email address.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationSuccessful;","import React from \"react\";\r\nimport BaseForm from \"./baseForms\";\r\nimport Joi from \"joi\";\r\n\r\nclass EmailForm extends BaseForm {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    email: Joi.string().email({ tlds: { allow: [\"com\", \"edu\"] } }).label(\"Email Address\")\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"container\"}>\r\n        <form className={\"one-form\"} onSubmit={this.handleSubmit} method={\"post\"}>\r\n          {this.renderInput(\"email\", \"Email Address\", \"email\")}\r\n          {this.renderSubmitButton(\"Confirm\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmailForm;","import EmailForm from \"../../components/forms/emailForm\";\r\nimport { startLoading, stopLoading } from \"../../components/loadingAnimation\";\r\nimport httpService from \"../../components/httpService\";\r\nimport { apiEndpoint, serverUrls, urls } from \"../../configuration\";\r\n\r\nclass ResendActivation extends EmailForm {\r\n  doSubmit = async () => {\r\n    try {\r\n      startLoading(\"Resending Activation Email\");\r\n      await httpService.post(`${apiEndpoint}${serverUrls.resendActivationEmail}/`, { ...this.state.data });\r\n      stopLoading();\r\n      this.props.history.push(urls.registerSuccess);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors, ...ex.response.data };\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default ResendActivation;","import EmailForm from \"../../components/forms/emailForm\";\r\nimport { startLoading, stopLoading } from \"../../components/loadingAnimation\";\r\nimport httpService from \"../../components/httpService\";\r\nimport { apiEndpoint, serverUrls, urls } from \"../../configuration\";\r\n\r\nclass ResetPassword extends EmailForm {\r\n  doSubmit = async () => {\r\n    try {\r\n      startLoading(\"Sending Password Reset Email\");\r\n      await httpService.post(`${apiEndpoint}${serverUrls.resetPassword}/`, { ...this.state.data });\r\n      stopLoading();\r\n      this.props.history.push(urls.emailSent);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors, ...ex.response.data };\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default ResetPassword;","import React, { useEffect } from \"react\";\r\nimport { startLoading, stopLoading } from \"../../components/loadingAnimation\";\r\nimport httpService from \"../../components/httpService\";\r\nimport { apiEndpoint, serverUrls, urls } from \"../../configuration\";\r\n\r\nconst EmailConfirmed = ({ match, history }) => {\r\n  const { uid, token } = match.params;\r\n  useEffect(() => {\r\n    if (uid && token) {\r\n      startLoading(\"Validating Confirmation URL\");\r\n      httpService.post(`${apiEndpoint}${serverUrls.confirmEmail}/`, { uid, token })\r\n        .then(res => {\r\n          console.log(res.status);\r\n          startLoading(\"Email Confirmed. Redirecting to Login page\");\r\n          setTimeout(() => {\r\n            stopLoading();\r\n            history.replace(urls.login);\r\n          }, 1000);\r\n        }).catch(ex => {\r\n        if (ex.response && ex.response.status === 403) {\r\n          startLoading(\"Email Confirmed. Redirecting to Login page\");\r\n          setTimeout(() => {\r\n            stopLoading();\r\n            history.replace(urls.login);\r\n          }, 1000);\r\n        } else {\r\n          startLoading(\"Wrong URL. Please try new URL\");\r\n          setTimeout(() => {\r\n            stopLoading();\r\n            history.replace(urls.resendActivationEmail);\r\n          }, 800);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailConfirmed;","import React from \"react\";\r\nimport Joi from \"joi\";\r\nimport { apiEndpoint, serverUrls, urls } from \"../../configuration\";\r\nimport { startLoading } from \"../loadingAnimation\";\r\nimport httpService from \"../httpService\";\r\nimport BaseForm from \"./baseForms\";\r\n\r\nclass ResetPasswordForm extends BaseForm {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    new_password: Joi.string().required(),\r\n    re_new_password: Joi.string().required(),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { history, uid, token } = this.props;\r\n    const { new_password, re_new_password } = this.state.data;\r\n    const data = { uid, token, new_password, re_new_password };\r\n    startLoading(\"Resetting password\");\r\n    try {\r\n      const response = await httpService.post(`${apiEndpoint}${serverUrls.resetPasswordConfirm}/`, data);\r\n      startLoading(\"Reset Successful. Redirecting...\")\r\n      setTimeout(() => {\r\n        history.push(urls.login);\r\n      }, 1000)\r\n      history.push(`/submissions/${response.data.id}`);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = {...this.state.errors, ...ex.response.data};\r\n        this.setState({ errors });\r\n        console.log(ex)\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"container\"}>\r\n        <form className={\"one-form\"} onSubmit={this.handleSubmit} method={\"post\"}>\r\n          {this.renderNonFieldError()}\r\n          {this.renderInput(\"new_password\", \"New Password\", \"password\")}\r\n          {this.renderInput(\"re_new_password\", \"Type Password Again\", \"password\")}\r\n          {this.renderSubmitButton(\"Set Password\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPasswordForm;","import React from \"react\";\r\nimport ResetPasswordForm from \"../../components/forms/resetPasswordForm\";\r\n\r\nconst ResetPasswordGivePass = ({match, history}) => {\r\n  const {uid, token} = match.params;\r\n  return (\r\n    <div>\r\n      {uid && token && <ResetPasswordForm uid={uid} token={token} history={history} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordGivePass;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./login\";\r\nimport { urls } from \"../../configuration\";\r\nimport UserList from \"./userList\";\r\nimport Register from \"./register\";\r\nimport RegistrationSuccessful from \"./registrationSuccessful\";\r\nimport ResendActivation from \"./resendActivation\";\r\nimport ResetPassword from \"./resetPassword\";\r\nimport EmailConfirmed from \"./emailConfirmed\";\r\nimport ResetPasswordGivePass from \"./resetPasswordGivePass\";\r\n\r\nconst UserRoute = () => {\r\n   return (\r\n      <Switch>\r\n         <Route path={urls.login} component={Login} />\r\n         <Route path={urls.register} component={Register} />\r\n         <Route path={urls.registerSuccess} component={RegistrationSuccessful} />\r\n         <Route path={`${urls.confirmEmail}/:uid/:token`} component={EmailConfirmed} />\r\n         <Route path={urls.resendActivationEmail} component={ResendActivation} />\r\n         <Route path={urls.resetPassword} component={ResetPassword} />\r\n         <Route path={`${ urls.resetPasswordConfirm }/:uid/:token`} component={ResetPasswordGivePass} />\r\n         <Route path={urls.userList} component={UserList} />\r\n      </Switch>\r\n   );\r\n};\r\n\r\nexport default UserRoute;\r\n","import React from \"react\";\r\n\r\nimport { Fade, Slide } from \"react-awesome-reveal\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\n\r\nconst Home = () => {\r\n   const user = getCurrentUser();\r\n   return (\r\n      <div>\r\n         <Fade duration={1000}>\r\n            <div style={{ color: \"#d03af2\" }} className={\"full-height fw-bolder display-6\"}>\r\n               {user && (\r\n                  <Slide>\r\n                     <p className={\"full-opacity ps-5 text-end h4\"}>Hey, {user.name}</p>\r\n                  </Slide>\r\n               )}\r\n               <div style={{ height: \"30%\" }} />\r\n               <Slide direction={\"right\"}>\r\n                  <p className={\"text-center display-1 fw-bolder align-content-center\"}>Welcome to B12J</p>\r\n               </Slide>\r\n               <Fade duration={10000}>\r\n                  <p style={{ color: \"#0a1c8f\" }} className={\"text-center h2\"}>\r\n                     Online judge for beginners\r\n                  </p>\r\n               </Fade>\r\n            </div>\r\n         </Fade>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","const theme = localStorage.getItem('theme') !== \"regular\";\r\n\r\nexport const css = {\r\n  heading4: theme ? \"bi-heading4 text-center\" : \"\",\r\n  navbar: theme ? \"navbar navbar-expand-lg navbar-dark bg-dark\" : \"\",\r\n  tableSingle: theme ? \"table table-bordered border-dark table-striped table-hover text-center\" : \"\",\r\n  hideOnPhone: \"d-none d-lg-block\",\r\n}","import React from \"react\";\r\nimport { css } from \"../../main_css\";\r\n\r\nconst Footer = () => {\r\n   const d = new Date();\r\n   return (\r\n      <div className={\"mt-5 pt-5 \" + css.hideOnPhone}>\r\n         <div className={\"bg-dark text-white text-center fixed-bottom\"}>\r\n            <p>\r\n               Developed and maintained by{\" \"}\r\n               <a className={\"text-white fw-bolder\"} href={\"https://www.linkedin.com/in/mahmudula2000/\"}>\r\n                  Mahmudul Alam\r\n               </a>\r\n            </p>\r\n            <p>\r\n               2020 May - {d.getFullYear()} {d.toLocaleString(\"default\", { month: \"long\" })}\r\n            </p>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport isLength from \"validator/es/lib/isLength\";\r\nimport isEmail from \"validator/es/lib/isEmail\";\r\nimport isAlphanumeric from \"validator/es/lib/isAlphanumeric\";\r\nimport isNumeric from \"validator/es/lib/isNumeric\";\r\nimport isAlpha from \"validator/es/lib/isAlpha\";\r\nimport isDate from \"validator/es/lib/isDate\";\r\nimport http from \"./httpService\";\r\nimport { apiEndpoint } from \"../configuration\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction enumerate(iterable) {\r\n  const arr = [];\r\n  let i = 0;\r\n\r\n  for (const x of iterable) {\r\n    arr.push([x, i++]);\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function copyToClipBoard(text) {\r\n  const input = document.createElement(\"textarea\");\r\n  input.innerHTML = text;\r\n  document.body.appendChild(input);\r\n  input.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(input);\r\n  alert(\"Copied the text: \" + text);\r\n}\r\n\r\nexport const renderCol2 = (ele1, ele2) => {\r\n  return (\r\n    <div className={\"row\"}>\r\n      <div className=\"col-sm\">{ele1}</div>\r\n      <div className=\"col-sm\">{ele2}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderColX = (cols) => {\r\n  return (\r\n    <div className={\"row\"}>\r\n      {enumerate(cols).map((col) => (\r\n        <div key={col[1]} className=\"col-sm\">{col[0]} </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formatHtml = (text) => {\r\n  if (text) {\r\n    return { __html: `${text}` };\r\n  }\r\n  return { __html: \"<span />\" };\r\n};\r\n\r\nexport const FormattedHtml = ({ text }) => <div className={\"ql-editor\"} dangerouslySetInnerHTML={formatHtml(text)} />;\r\n\r\nexport const validate = (state) => {\r\n  const { data, schema } = state;\r\n  let haveError = false;\r\n  let errors = {};\r\n  for (let [key, value] of Object.entries(schema)) {\r\n    errors[key] = validateProperty(key, data[key], value);\r\n    if (errors[key]) {\r\n      haveError = true;\r\n    }\r\n  }\r\n  if (haveError) {\r\n    return errors;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateProperty = (name, value, schema) => {\r\n  let label;\r\n  schema.label ? (label = schema.label) : (label = name);\r\n  if (schema.required) {\r\n    if (!value || value.length === 0) return `${label} can not be empty`;\r\n  }\r\n  if (typeof schema.allowedValues === \"object\") {\r\n    if (!schema.allowedValues.includes(value)) {\r\n      return `Invalid choice of ${label}`;\r\n    }\r\n  }\r\n  if (schema.length) {\r\n    if (!isLength(value, schema.length)) {\r\n      return `${label} length must be between ${schema.length.min} and ${schema.length.max || \"infinite\"}`;\r\n    }\r\n  }\r\n  if (schema.arrLength) {\r\n    if (value.length < schema.arrLength.min || value.length > schema.arrLength.max) {\r\n      return `${label} length must be between ${schema.arrLength.min} and ${schema.arrLength.max}`;\r\n    }\r\n  }\r\n  if (schema.email) {\r\n    if (!isEmail(value)) return `${label} is not a valid Email.`;\r\n  }\r\n  if (schema.alphanumeric) {\r\n    if (!isAlphanumeric(value)) return `${label} can be only letter and number.`;\r\n  }\r\n  if (schema.number) {\r\n    if (!isNumeric(value)) return `${label} should contain only number.`;\r\n  }\r\n  if (schema.alpha) {\r\n    if (!isAlpha(value)) return `${label} should contain only letter.`;\r\n  }\r\n  if (schema.date) {\r\n    if (!isDate(value)) {\r\n      return `${label} must be date`;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const groupHandleChange = ({ currentTarget }, state, setState) => {\r\n  const { name, value } = currentTarget;\r\n  const { data, schema, errors } = state;\r\n  if (value === data[name]) return;\r\n  let temErrors = {};\r\n  const temData = { ...data, [name]: value };\r\n\r\n  // Check for errors in value\r\n  if (schema && schema[name]) {\r\n    const error = validateProperty(name, value, schema[name]);\r\n    if (error) {\r\n      if (errors) {\r\n        temErrors = { ...errors, [name]: error };\r\n      } else {\r\n        temErrors = { [name]: error };\r\n      }\r\n    }\r\n    // Set value\r\n    setState({ ...state, data: temData, errors: temErrors });\r\n  } else {\r\n    setState({ ...state, data: temData });\r\n  }\r\n};\r\n\r\nexport const pagination = (url, pages = 1, page = 1) => {\r\n  let pageList = [];\r\n  if (page > 2) {\r\n    for (let i = page - 2; i <= pages && i <= page + 2; i++) pageList.push(i);\r\n  } else {\r\n    for (let i = 1; i <= pages && i <= 5; i++) pageList.push(i);\r\n  }\r\n  return (\r\n    <ul className=\"pagination\">\r\n      {pageList.map((page) => (\r\n        <li key={page} className=\"page-item\">\r\n          <Link className=\"page-link\" to={url + page.toString()}>\r\n            {page}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport function getTimeDifference(start, end) {\r\n  let dif = dayjs(start).diff(dayjs(end), \"minute\");\r\n  let hour = Math.floor(dif / 60);\r\n  let minute = dif - hour * 60;\r\n  const hUnit = hour > 1 ? \"hours\" : \"hour\";\r\n  const mUnit = minute > 1 ? \"minutes\" : \"minute\";\r\n  if (minute > 55) {\r\n    hour++;\r\n    minute = 0;\r\n  }\r\n  if (minute > 5) return `${hour} ${hUnit} ${minute} ${mUnit}`;\r\n  return `${hour} ${hUnit}`;\r\n}\r\n\r\nexport const submit = async (url, id, state, setState, history) => {\r\n  try {\r\n    if (id) {\r\n      await http.put(`${apiEndpoint}${url}/${id}/`, state.data);\r\n      history.push(`${url}/${id}`);\r\n    } else {\r\n      const res = await http.post(`${apiEndpoint}${url}/`, state.data);\r\n      history.push(`${url}/${res.data.id}`);\r\n    }\r\n  } catch (e) {\r\n    if (e.response.status === 400) {\r\n      setState({ ...state, errors: e.response.data });\r\n    } else {\r\n      alert(`Unknown error occurred. Status: ${e.response.status}`);\r\n    }\r\n  }\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { urls } from \"../../configuration\";\r\nimport { getTimeDifference, renderColX } from \"../helperFunctions\";\r\nimport { UserListSingleRow } from \"../../apps/user/userList\";\r\nimport { extractDate } from \"../../apps/others/functions\";\r\nimport dayjs from \"dayjs\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nconst ContestCard = ({ contest, userActs, prev = false }) => {\r\n  return (\r\n    <div className={\"card rounded-top\"}>\r\n      <div className={\"card-header h4\"}>\r\n        <Link to={`${urls.contests}/${contest.id}`} className={\"white-link\"}>\r\n          {contest.title}{\" \"}\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={\"card-body\"}>\r\n        {renderColX([\r\n          <div>\r\n            <span className={\"fw-bold\"}>Writer(s)</span>\r\n            <UserListSingleRow users={contest.writers} userActs={userActs} />\r\n            <div className={\"vertical-line\"} />\r\n          </div>,\r\n          <div>\r\n            <span className={\"fw-bold\"}>Tester(s)</span>\r\n            <UserListSingleRow users={contest.testers} userActs={userActs} />\r\n          </div>]\r\n        )}\r\n\r\n        {renderColX([\r\n          <div>\r\n            {!prev && <p>Starts {extractDate(contest.start_time)}</p>}\r\n            {prev && <p>Ended {extractDate(contest.end_time)}</p>}\r\n          <div className={\"vertical-line\"} />\r\n          </div>,\r\n          <div className=\"col\">\r\n            Length:\r\n            {getTimeDifference(contest.end_time, contest.start_time)}\r\n          </div>]\r\n        )}\r\n\r\n        <div className={\"text-center\"}>\r\n          {dayjs().isSameOrBefore(contest.start_time) && (\r\n            <div>\r\n              <Countdown date={contest.start_time} className={\"h2\"} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContestCard","import React, { useContext } from \"react\";\r\nimport { SuperContext } from \"../../context\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport isSameOrBefore from \"dayjs/plugin/isSameOrBefore\";\r\nimport ContestCard from \"../../components/cards/contestCard\";\r\n\r\ndayjs.extend(isSameOrBefore);\r\n\r\nconst ContestList = ({match}) => {\r\n  const {page} = match.params;\r\n  const { contestActs, userActs } = useContext(SuperContext);\r\n  let contestList = [];\r\n  if (page) {\r\n    contestList = contestActs.getListPage();\r\n  } else {\r\n    contestList = contestActs.getListPage(page);\r\n  }\r\n  let ended = [],\r\n    upcoming = [];\r\n  for (let contest of contestList) {\r\n    if (dayjs(contest.end_time).isSameOrBefore(Date.now())) {\r\n      ended.push(contest);\r\n    } else upcoming.push(contest);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container m-2\">\r\n      <div className={\"h2\"}>Current or Upcoming contests</div>\r\n      {upcoming.map((contest) => (\r\n        <ContestCard key={contest.id} contest={contest} userActs={userActs} />\r\n      ))}\r\n      <p className={\"mt-5\"} />\r\n      <div className={\"h2\"}>Past contests</div>\r\n      {ended.map((contest) => (\r\n        <ContestCard key={contest.id} contest={contest} userActs={userActs} prev={true} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContestList;\r\n","import React, { useContext } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { FormattedHtml, renderColX } from \"../../components/helperFunctions\";\r\nimport { UserListSingleRow } from \"../user/userList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { urls } from \"../../configuration\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { Table } from \"../../components/customTags\";\r\n\r\nconst Contest = ({ match }) => {\r\n  const { contestId } = match.params;\r\n  const { contestActs, userActs, problemActs } = useContext(SuperContext);\r\n  const contest = contestActs.getById(contestId);\r\n  const user = getCurrentUser();\r\n  let problems = [];\r\n  if (contestId) {\r\n    problems = problemActs.contestProblems(contestId) || [];\r\n  }\r\n\r\n  const contestStart = new Date((contest && contest.start_time) || Date.now().toLocaleString());\r\n  const contestEnd = new Date((contest && contest.end_time) || Date.now().toLocaleString());\r\n\r\n  return (contest &&\r\n    <div className={\"container m-2\"}>\r\n      {user && user.is_staff && (\r\n        <div>\r\n          <Link to={`${urls.editContest}/${contestId}`} className={\"btn btn-warning float-end\"}>\r\n            Edit\r\n          </Link>\r\n        </div>\r\n      )}\r\n      {problems.length > 0 && contestStart <= Date.now() && <div>\r\n        <Link to={`${urls.standing}/${contestId}`} className={\"btn btn-warning\"}>\r\n          Standing\r\n        </Link>\r\n      </div>}\r\n      <div>\r\n        <div className={\"pt-2\"}>\r\n          <div className={\"row\"}>\r\n            <div className=\"col\" />\r\n            <div className=\"display-4 fw-bold text-secondary col-auto rounded-3\">{contest.title}</div>\r\n            <div className=\"col\" />\r\n          </div>\r\n          <br />\r\n        </div>\r\n\r\n        <div>\r\n          {contest.description && <div><h2>About contest</h2>\r\n            <div><FormattedHtml text={contest.description} /></div>\r\n            <br /><br /><br /></div>\r\n          }\r\n          {renderColX(\r\n            [<div><h3>Writers</h3>\r\n              <UserListSingleRow users={contest.writers} userActs={userActs} />\r\n            </div>,\r\n              <div>\r\n                <h3>Testers</h3>\r\n                <UserListSingleRow users={contest.testers} userActs={userActs} />\r\n              </div>\r\n            ]\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {problems.length > 0 && contestStart <= Date.now() &&\r\n      <div>\r\n        <h2>Problems</h2>\r\n        {renderContestProblem(problems)}\r\n        {contestEnd <= Date.now() && <button>Tutorials</button>}\r\n      </div>}\r\n\r\n      {contestStart > Date.now() && (\r\n        <div className={\"pt-5 pb-5 text-center\"}>\r\n          <p className={\"h1\"}>Starts in: </p>\r\n          <Countdown date={contest.start_time} className=\"h1\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Contest;\r\n\r\n\r\nexport function renderContestProblem(problems) {\r\n  const data = [];\r\n  for (let problem of problems) {\r\n    if (problem) {\r\n      const { title, sid, contestId } = problem;\r\n      data.push([<Link\r\n        to={`${urls.problems}/contest=${contestId}/${problem.id}`}>{title}</Link>, sid]);\r\n    }\r\n  }\r\n  return <Table headers={[\"Name\", \"ID\"]} body={data} />;\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport http from \"../../components/httpService\";\r\nimport { apiEndpoint } from \"../../configuration\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { Table } from \"../../components/customTags\";\r\n\r\nconst Standing = ({ match }) => {\r\n   const { userActs } = useContext(SuperContext);\r\n   const { contestId } = match.params;\r\n   const [duringContest, setDuringContest] = useState([]);\r\n   const [afterContest, setAfterContest] = useState([]);\r\n   useEffect(() => {\r\n      // ToDo: Start loading animation\r\n      const apiCall = async () => {\r\n         const data = await http.get(`${apiEndpoint}/standing/${contestId}`);\r\n         setDuringContest(data.data.during);\r\n         setAfterContest(data.data.after);\r\n      };\r\n      apiCall();\r\n   }, [contestId]);\r\n\r\n   return (\r\n      <div className=\"container m-2\">\r\n         <h2>During Contest</h2>\r\n         <StandingTable position={1} objectList={duringContest} userActs={userActs} />\r\n         <h2>After Contest</h2>\r\n         <StandingTable position={duringContest.length + 1} objectList={afterContest} userActs={userActs} />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Standing;\r\n\r\nconst StandingTable = ({ objectList, userActs, position = 1 }) => {\r\n   const data = [];\r\n   for (let x of objectList) {\r\n      data.push([position++, userActs.fullName(x[0]), x[1], Math.floor(parseFloat(x[2]) / 100)]);\r\n   }\r\n   return <Table headers={[\"Position\", \"User\", \"Solves\", \"Penalty\"]} body={data} />;\r\n};\r\n","import React from \"react\";\r\nimport BaseForm from \"./baseForms\";\r\nimport { renderColX } from \"../helperFunctions\";\r\nimport Joi from \"joi\";\r\nimport { serverUrls, urls } from \"../../configuration\";\r\n\r\nclass ContestForm extends BaseForm {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    writers: Joi.array().required(),\r\n    testers: Joi.array().required(),\r\n    title: Joi.string().required().min(5).max(120).label(\"Contest Name\"),\r\n    start_time: Joi.date().required(),\r\n    end_time: Joi.date().required(),\r\n    description: Joi.string()\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.contest) {\r\n      this.setState({data: { ...this.state.data, ...this.props.contest }});\r\n    }\r\n  }\r\n\r\n  doSubmit = () => {\r\n    this.doSubmitHelper(serverUrls.contests, urls.contests, 'Saving Contest')\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.props;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} method={\"post\"}>\r\n        {this.renderNonFieldError()}\r\n        {renderColX([\r\n          this.renderAutoCompleteSelect(\"writers\", \"Contest Writers\", users, \"id\", \"username\", true),\r\n          this.renderAutoCompleteSelect(\"testers\", \"Contest Testers\", users, \"id\", \"username\", true)\r\n        ])}\r\n        {this.renderInput(\"title\", \"Contest Name\")}\r\n        {renderColX([\r\n          this.renderInput(\"start_time\", \"Start Time\", \"datetime-local\"),\r\n          this.renderInput(\"end_time\", \"End Time\", \"datetime-local\")\r\n        ])}\r\n        {this.renderTextEditor(\"description\", \"Description\")}\r\n        {this.renderSubmitButton(\"Save Contest\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContestForm;","import React, { useContext} from \"react\";\r\nimport { SuperContext } from \"../../context\";\r\nimport ContestForm from \"../../components/forms/contestForm\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { urls } from \"../../configuration\";\r\n\r\nconst AddEditContest = ({ history, match }) => {\r\n  const { id } = match.params;\r\n  const { contestActs, userActs } = useContext(SuperContext);\r\n  const users = userActs.getList();\r\n  const contest = contestActs.getById(id);\r\n\r\n  if (!getCurrentUser()) {\r\n    history.push(urls.login);\r\n  }\r\n  return (\r\n    <div>\r\n      {!contest && <div>\r\n        <h1>Add new contest</h1>\r\n        <ContestForm users={users} history={history} />\r\n      </div>}\r\n      {contest &&\r\n      <div>\r\n        <h1>{contest.title}</h1>\r\n        <ContestForm users={users} history={history} contest={contest} />\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEditContest;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { urls } from \"../../configuration\";\r\nimport ContestList from \"./contestList\";\r\nimport Contest from \"./contest\";\r\nimport Standing from \"./standing\";\r\nimport AddEditContest from \"./addEditContest\";\r\n\r\nconst ContestRoute = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${urls.editContest}/:id`} component={AddEditContest} />\r\n      <Route path={urls.addContest} component={AddEditContest} />\r\n      <Route path={`${urls.standing}/:contestId`} component={Standing} />\r\n      <Route path={`${urls.contests}/:contestId`} component={Contest} />\r\n      <Route path={`${urls.contests}/page=:page`} component={ContestList} />\r\n      <Route path={urls.contests} component={ContestList} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ContestRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { pagination } from \"../../components/helperFunctions\";\r\nimport { urls } from \"../../configuration\";\r\nimport { Table } from \"../../components/customTags\";\r\n\r\nconst ProblemList = ({ match }) => {\r\n   const page = parseInt(match.params.page) || 1;\r\n   const { problemActs } = useContext(SuperContext);\r\n   let problems = problemActs.getListPage(page);\r\n   const pages = problemActs.totalPages();\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         {renderProblemList(problems, urls.problems)}\r\n         {pagination(`${urls.problems}/page=`, pages, page)}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ProblemList;\r\n\r\nexport function renderProblemList(problems) {\r\n   const data = [];\r\n   for (let problem of problems) {\r\n      if (problem)  {\r\n         data.push([<Link to={`${urls.problems}/${problem.id}`}>{problem.title}</Link>, problem.difficulty]);\r\n      }\r\n   }\r\n   return <Table headers={[\"Name\", \"Difficulty\"]} body={data} />;\r\n}\r\n","import React from \"react\";\r\nimport BaseForm from \"./baseForms\";\r\nimport Joi from \"joi\";\r\nimport { renderColX } from \"../helperFunctions\";\r\nimport { getCurrentUser } from \"../authService\";\r\nimport { startLoading } from \"../loadingAnimation\";\r\nimport { apiEndpoint, serverUrls, urls } from \"../../configuration\";\r\nimport httpService from \"../httpService\";\r\n\r\nclass ProblemCodeForm extends BaseForm {\r\n  state = {\r\n    data: { language: localStorage.getItem(\"language\") || \"python\", theme: \"chrome\", font: \"15px\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    code: Joi.string().required(),\r\n    language: Joi.required(),\r\n    theme: Joi.required(),\r\n    font: Joi.required()\r\n  };\r\n\r\n  user = getCurrentUser();\r\n  doSubmit = async () => {\r\n    const { history, contestId, problem } = this.props;\r\n    const { code, language } = this.state.data;\r\n    localStorage.setItem(\"language\", language);\r\n    if (!this.user) {\r\n      history.push(urls.login);\r\n    }\r\n    const data = { code, language, problem: problem.id };\r\n    if (contestId) data[\"contest\"] = contestId;\r\n\r\n    startLoading(\"Submitting Code\");\r\n    try {\r\n      const response = await httpService.post(`${apiEndpoint}${serverUrls.submissions}/`, data);\r\n      this.props.history.push(`/submissions/${response.data.id}`);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (<div>\r\n      {!this.user && <div className=\"alert alert-danger\">You must login to see code editor</div>}\r\n      {this.user && <form method={\"post\"} onSubmit={this.handleSubmit}>\r\n        {renderColX([\r\n          this.renderSelect(\"theme\", \"Select theme\",\r\n            [{ value: \"chrome\", name: \"White\" }, { value: \"gob\", name: \"Dark\" }]),\r\n          this.renderSelect(\"language\", \"Select language\",\r\n            [{ value: \"python\", name: \"Python3.9\" }, { value: \"c_cpp\", name: \"C/C++\" }]),\r\n          this.renderSelect(\"font\", \"Select font\",\r\n            [{ value: \"12px\", name: \"12px\" },\r\n              { value: \"15px\", name: \"15px\" },\r\n              { value: \"18px\", name: \"18px\" },\r\n              { value: \"20px\", name: \"20px\" }])\r\n        ])}\r\n        {this.renderCodeEditor(\"code\")}\r\n        {this.renderSubmitButton(\"Submit\")}\r\n      </form>}\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default ProblemCodeForm;","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { urls } from \"../../configuration\";\r\nimport { FormattedHtml } from \"../../components/helperFunctions\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { Table } from \"../../components/customTags\";\r\nimport ProblemCodeForm from \"../../components/forms/problemCodeForm\";\r\n\r\nconst Problem = ({ match, history }) => {\r\n  const { problemActs, userActs } = useContext(SuperContext);\r\n  const { problemId, contestId } = match.params;\r\n  const problem = problemActs.getById(problemId);\r\n\r\n  const userId = getCurrentUser() && getCurrentUser().user_id;\r\n  return (\r\n    problem && (\r\n      <div className=\"container\">\r\n        <div className=\"float-end\">\r\n          <a className={\"white-link\"} href={\"#codeEditor\"}>\r\n            Code Editor\r\n          </a>\r\n        </div>\r\n\r\n        {userId && problem.user === userId && (\r\n          <div>\r\n            <a href={`${urls.editProblem}/${problemId}`} className={\"btn btn-warning\"}>\r\n              Edit\r\n            </a>\r\n            <Link to={`${urls.addTestCases}/${problemId}`} className={\"btn btn-warning\"}>\r\n              Add Test Case\r\n            </Link>\r\n            <Link to={`${urls.testCases}/${problemId}`} className={\"btn btn-warning\"}>\r\n              Test Case List\r\n            </Link>\r\n          </div>\r\n        )}\r\n        <div className={\"text-center pt-5\"}>\r\n          <h1 className={\"display-4 fw-bold text-secondary rounded-3\"}>{problem.title}</h1>\r\n          <p> Writer: {userActs.fullName(problem.user)} </p>\r\n          <p>Time Limit: {problem.memory_limit} MB</p>\r\n          <p>Memory Limit: {problem.time_limit} second(s)</p>\r\n        </div>\r\n\r\n        <div>\r\n          {problem.notice && <div className={\"alert alert-secondary\"}>\r\n            <FormattedHtml text={problem.notice} /></div>}\r\n          <b className={\"h5\"}>Problem statement</b>\r\n          <FormattedHtml text={problem.description} /> <br />\r\n          <b className={\"h5\"}>Input Terms</b>\r\n          <FormattedHtml text={problem.input_terms} /> <br />\r\n          <b className={\"h5\"}>Output Terms</b>\r\n          <FormattedHtml text={problem.output_terms} /> <br />\r\n        </div>\r\n        <b className={\"h5\"}>Examples</b>\r\n        <TestCases test_cases={problem.test_cases} />\r\n        <ProblemCodeForm problem={problem} history={history} contestId={contestId} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Problem;\r\n\r\nconst TestCases = ({ test_cases }) => {\r\n  const data = [];\r\n  for (let test of test_cases) {\r\n    data.push([<pre>{test.inputs}</pre>, <pre>{test.output}</pre>]);\r\n  }\r\n  return <Table headers={[\"Input\", \"Output\"]} body={data} />;\r\n};\r\n","import React from \"react\";\r\nimport BaseForm from \"./baseForms\";\r\nimport Joi from \"joi\";\r\nimport { renderColX } from \"../helperFunctions\";\r\nimport { serverUrls, urls } from \"../../configuration\";\r\n\r\nclass ProblemForm extends BaseForm {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    title: Joi.string().required().min(5).max(255),\r\n    description: Joi.string().required().min(50),\r\n    input_terms: Joi.string().required().min(50),\r\n    output_terms: Joi.string().required().min(50),\r\n    hidden_till: Joi.date(),\r\n    correct_code: Joi.string().required(),\r\n    correct_lang: Joi.required(),\r\n    memory_limit: Joi.number(),\r\n    time_limit: Joi.number(),\r\n    difficulty: Joi.number().min(500).max(1500),\r\n    example_number: Joi.number().min(1).max(3),\r\n    notice: Joi.string(),\r\n    font: Joi.string(),\r\n    theme: Joi.string()\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.problem) {\r\n      this.setState({ data: { ...this.state.data, ...this.props.problem } });\r\n    }\r\n  }\r\n\r\n  doSubmit = () => {\r\n    this.doSubmitHelper(serverUrls.problems, urls.problems, \"Saving Problem\");\r\n  };\r\n\r\n  languageOptions = [\r\n    { name: \"Python3.10\", value: \"python\" },\r\n    { name: \"C/C++\", value: \"c_cpp\" }\r\n  ];\r\n  memoryLimitOptions = [\r\n    { name: \"256 MB\", value: 256 },\r\n    { name: \"512 MB\", value: 512 },\r\n    { name: \"1024 MB\", value: 1024 }\r\n  ];\r\n  timeLimitOptions = [\r\n    { name: \"1 second\", value: 1 },\r\n    { name: \"2 seconds\", value: 2 },\r\n    { name: \"3 seconds\", value: 3 },\r\n    { name: \"4 seconds\", value: 4 }\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} method={\"post\"}>\r\n        {this.renderNonFieldError()}\r\n        {this.renderInput(\"title\", \"Title\")}\r\n        {this.renderTextEditor(\"description\", \"Description\")}\r\n        {this.renderTextEditor(\"input_terms\", \"Input Terms\")}\r\n        {this.renderTextEditor(\"output_terms\", \"Output Terms\")}\r\n        {this.renderInput(\"hidden_till\", \"Hidden Till\", \"datetime-local\")}\r\n        {renderColX([\r\n          this.renderSelect(\"theme\", \"Theme\",\r\n            [{ value: \"chrome\", name: \"White\" }, { value: \"gob\", name: \"Dark\" }]),\r\n          this.renderSelect(\"correct_lang\", \"Language(required)\", this.languageOptions),\r\n          this.renderSelect(\"font\", \"Font\",\r\n            [{ value: \"12px\", name: \"12px\" },\r\n              { value: \"15px\", name: \"15px\" },\r\n              { value: \"18px\", name: \"18px\" },\r\n              { value: \"20px\", name: \"20px\" }])\r\n        ])}\r\n        {this.renderCodeEditor(\"correct_code\", \"Correct Code\", \"correct_lang\")}\r\n        {renderColX([\r\n          this.renderSelect(\"memory_limit\", \"Memory Limit\", this.memoryLimitOptions),\r\n          this.renderSelect(\"time_limit\", \"Time Limit\", this.timeLimitOptions)\r\n        ])}\r\n        {renderColX([\r\n          this.renderInput(\"difficulty\", \"Difficulty\", \"number\"),\r\n          this.renderInput(\"example_number\", \"Number of Example\", \"number\")\r\n        ])}\r\n        {this.renderTextEditor(\"notice\", \"Problem Notice Board\")}\r\n        {this.renderSubmitButton(\"Submit Problem\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProblemForm;","import React, { useContext} from \"react\";\r\nimport { SuperContext } from \"../../context\";\r\nimport ProblemForm from \"../../components/forms/problemForm\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { urls } from \"../../configuration\";\r\n\r\nconst AddEditProblem = ({ match, history }) => {\r\n  const { id } = match.params;\r\n  const { problemActs } = useContext(SuperContext);\r\n  const problem = problemActs.getById(id);\r\n\r\n  if (!getCurrentUser()) {\r\n    history.push(urls.login);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!id && !problem && <div>\r\n        <h1>Add new problem</h1>\r\n        <ProblemForm history={history} />\r\n      </div>}\r\n      {problem &&\r\n      <div>\r\n        <h1>{problem.title}</h1>\r\n        <ProblemForm history={history} problem={problem} />\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEditProblem;","import React from \"react\";\r\nimport BaseForm from \"./baseForms\";\r\nimport Joi from \"joi\";\r\nimport { serverUrls, urls } from \"../../configuration\";\r\n\r\nclass TestCaseForm extends BaseForm {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    inputs: Joi.string().required()\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ data: { ...this.state.data, problem: this.props.problem.id } });\r\n  }\r\n\r\n\r\n  doSubmit = () => {\r\n    this.doSubmitHelper(serverUrls.test_cases, undefined, \"Adding Test Case\");\r\n    window.location = `${urls.testCases}/${this.props.problem.id}`\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form method={\"post\"} onSubmit={this.handleSubmit}>\r\n        {this.renderTextArea(\"inputs\", \"Input\")}\r\n        {this.renderSubmitButton(\"Submit\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestCaseForm;","import React, { useContext } from \"react\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { urls } from \"../../configuration\";\r\nimport TestCaseForm from \"../../components/forms/testCaseForm\";\r\n\r\nconst AddTestCase = ({ match, history }) => {\r\n  const { problemId } = match.params;\r\n  const { problemActs } = useContext(SuperContext);\r\n  const problem = problemActs.getById(problemId);\r\n\r\n  if (!getCurrentUser()) {\r\n    history.push(urls.login);\r\n  }\r\n\r\n  return (\r\n    problem && <div>\r\n      <TestCaseForm history={history} problem={problem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTestCase;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { Table } from \"../../components/customTags\";\r\nimport httpService from \"../../components/httpService\";\r\nimport { apiEndpoint, serverUrls } from \"../../configuration\";\r\n\r\nconst TestCaseList = ({ match }) => {\r\n  const { problemId } = match.params;\r\n  const { problemActs } = useContext(SuperContext);\r\n  const problem = problemActs.getById(problemId);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    httpService.get(`${apiEndpoint}${serverUrls.test_cases}/?problem_id=${problemId}`).then(res => {\r\n      const tests = []\r\n      for (let test of res.data.results) {\r\n        tests.push([<pre>{test.inputs}</pre>, <pre>{test.output}</pre>]);\r\n      }\r\n      setData(tests);\r\n    });\r\n  }, [problemId]);\r\n\r\n  return (\r\n    problem && <div>\r\n      <Table headers={[\"Input\", \"Output\"]} body={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestCaseList;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ProblemList from \"./problemList\";\r\nimport { urls } from \"../../configuration\";\r\nimport Problem from \"./problem\";\r\nimport AddEditProblem from \"./addEditProblem\";\r\nimport AddTestCase from \"./addTestCase\";\r\nimport TestCaseList from \"./testCaseList\";\r\n\r\nconst ProblemRoute = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${urls.problems}/page=:page`} component={ProblemList} />\r\n      <Route path={`${urls.problems}/contest=:contestId/:problemId`} component={Problem} />\r\n      <Route path={`${urls.addTestCases}/:problemId`} component={AddTestCase} />\r\n      <Route path={`${urls.testCases}/:problemId`} component={TestCaseList} />\r\n      <Route path={`${urls.addProblem}`} component={AddEditProblem} />\r\n      <Route path={`${urls.editProblem}/:id`} component={AddEditProblem} />\r\n      <Route path={`${urls.problems}/:problemId`} component={Problem} />\r\n      <Route path={urls.problems} component={ProblemList} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ProblemRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { css } from \"../../main_css\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { urls } from \"../../configuration\";\r\nimport { logout } from \"../../components/authService\";\r\n\r\nconst NavBar = () => {\r\n  const { userActs } = useContext(SuperContext);\r\n  const user = userActs.currentUser();\r\n  return (\r\n    <nav className={css.navbar} id={\"navBar1\"}>\r\n      <div className={\"container-fluid\"}>\r\n        <button\r\n          className=\"navbar-toggler btn-outline-dark\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"  />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav d-inline-flex\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={urls.home}>\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={urls.contests}>\r\n                Contests\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={urls.problems}>\r\n                Problems\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={urls.submissions}>\r\n                Submissions\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to={urls.tutorials}>\r\n                Tutorials\r\n              </NavLink>\r\n            </li>\r\n\r\n            {!user &&\r\n            <li className=\"nav-item\">\r\n              <NavLink to={urls.register} className=\"nav-link\">\r\n                Register\r\n              </NavLink>\r\n            </li>}\r\n            {!user &&\r\n            <li className=\"nav-item\">\r\n              <NavLink to={urls.login} className=\"nav-link\">\r\n                Login\r\n              </NavLink>\r\n            </li>}\r\n            {user && <li className=\"nav-item\">\r\n              <NavLink to={urls.profile} className=\"nav-link\">\r\n                Profile\r\n              </NavLink>\r\n            </li>\r\n            }\r\n\r\n            {user && (\r\n              <li className={\"nav-item\"}>\r\n                <button onClick={() => logout()} className={\"btn btn-sm fw-bold btn-outline-danger nav-link border-0\"}>\r\n                  Logout\r\n                </button>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { pagination } from \"../../components/helperFunctions\";\r\nimport { Table, Verdict } from \"../../components/customTags\";\r\n\r\nconst SubmissionList = ({ match }) => {\r\n   const page = parseInt(match.params.page) || 1;\r\n   const { submissionActs, userActs } = useContext(SuperContext);\r\n   const submissionList = submissionActs.getListPage(page);\r\n\r\n   const pages = submissionActs.totalPages();\r\n\r\n   return (\r\n      <div className=\"container pt-2\">\r\n         {renderSubmissionList(submissionList, userActs)}\r\n         {pagination(\"/submissions/page=\", pages, page)}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SubmissionList;\r\n\r\nexport const renderSubmissionList = (submissionList, userActs) => {\r\n   const data = [];\r\n   for (let submission of submissionList) {\r\n      data.push([\r\n         userActs.fullName(submission.user),\r\n         submission.problem_title,\r\n         <Link to={`/submissions/${submission.id}`}><Verdict verdict={submission.verdict} /></Link>,\r\n      ]);\r\n   }\r\n   return <Table headers={[\"By\", \"Problem\", \"Verdict\"]} body={data} />;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Verdict } from \"../../components/customTags\";\r\nimport { apiEndpoint, serverUrls, urls } from \"../../configuration\";\r\nimport httpService from \"../../components/httpService\";\r\n\r\nconst Submission = ({ match }) => {\r\n  const { submissionId } = match.params;\r\n  const { userActs, problemActs } = useContext(SuperContext);\r\n  const [submission, setSubmission] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    httpService.get(`${apiEndpoint}${serverUrls.submissions}/${submissionId}`).then(res => {\r\n      setSubmission(res.data);\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }, [submissionId]);\r\n\r\n  return (\r\n    <div>{submission &&\r\n    <div className=\"container mt-2\">\r\n      <Table\r\n        headers={[\"ID\", \"Problem\", \"Submitter\", \"Language\", \"Verdict\"]}\r\n        body={[\r\n          [\r\n            submissionId,\r\n            (submission.contest && <Link to={`${urls.problems}/contest=${submission.contest}/${submission.problem}`}>\r\n              {problemActs.getById(submission.problem, \"title\")}\r\n            </Link>) || <Link to={`${urls.problems}/${submission.problem}`}>\r\n              {problemActs.getById(submission.problem, \"title\")}\r\n            </Link>,\r\n            userActs.fullName(submission.user),\r\n            submission.language,\r\n            <Verdict verdict={submission.verdict} />\r\n          ]\r\n        ]}\r\n      />\r\n      {renderSubmissionDetails(submission.details, submission.code)}\r\n    </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Submission;\r\n\r\n\r\nconst renderSubmissionDetails = (details, code) => {\r\n  if (details) {\r\n    try {\r\n      details = JSON.parse(details);\r\n    } catch (e) {\r\n      return <h3>Submission details is not available</h3>;\r\n    }\r\n\r\n    if (details[2] === \"CE\") {\r\n      return <div>\r\n        <h1>{details[0]}</h1>\r\n        {code && <pre className={\"bg-success text-white\"}>{code}</pre>}\r\n        <pre className={\"h6\"}>{details[1]}</pre>\r\n      </div>;\r\n    } else if (details[2] === \"WA\" || details[2] === \"AC\" || details[2] === \"TLE\") {\r\n      return <div>\r\n        <h1>{details[0]}</h1>\r\n        {code && <pre className={\"bg-success text-white\"}>{code}</pre>}\r\n        <table className=\"table table-bordered table-striped\">\r\n          <thead>\r\n          <tr>\r\n            <th>Input</th>\r\n            <th>Your Output</th>\r\n            <th>Correct Output</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {details[1].map((row) => (\r\n            <tr key={Math.floor(Math.random() * 1000000) + Math.floor(Math.random() * 1000000)}>\r\n              {row.map((cell) => (\r\n                <td key={Math.floor(Math.random() * 1000000) + Math.floor(Math.random() * 1000000)}>\r\n                  <pre>{cell}</pre>\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>;\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SubmissionList from \"./submissionList\";\r\nimport Submission from \"./submission\";\r\nimport { urls } from \"../../configuration\";\r\n\r\nconst SubmissionRoute = () => {\r\n   return (\r\n      <Switch>\r\n         <Route path={`${urls.submissions}/page=:page`} component={SubmissionList} />\r\n         <Route path={`${urls.submissions}/:submissionId`} component={Submission} />\r\n         <Route path={urls.submissions} component={SubmissionList} />\r\n      </Switch>\r\n   );\r\n};\r\n\r\nexport default SubmissionRoute;\r\n","import React from \"react\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { urls } from \"../../configuration\";\r\n\r\nconst EmailSent = ({ history }) => {\r\n  if (getCurrentUser()) {\r\n    history.replace(urls.profile);\r\n  }\r\n  return (\r\n    <div className={\"container\"}>\r\n      <div className=\"alert alert-success\">\r\n        <strong>An Email is sent to you. Please don't forget to check spam folder.</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailSent;","import React from \"react\";\r\n\r\nconst PrivacyPolicy = () => {\r\n  return (\r\n    <div>\r\n      <h1>Privacy Policy for B12J</h1>\r\n\r\n      <p>At B12J, accessible from https://b12j.ga, one of our main priorities is the privacy of our visitors. This\r\n        Privacy Policy document contains types of information that is collected and recorded by B12J and how we use\r\n        it.</p>\r\n\r\n      <p>If you have additional questions or require more information about our Privacy Policy, do not hesitate to\r\n        contact us.</p>\r\n\r\n      <p>This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards\r\n        to the information that they shared and/or collect in B12J. This policy is not applicable to any information\r\n        collected offline or via channels other than this website. Our Privacy Policy was created with the help of\r\n        the <a href=\"https://www.privacypolicygenerator.info\">Free Privacy Policy Generator</a>.</p>\r\n\r\n      <h2>Consent</h2>\r\n\r\n      <p>By using our website, you hereby consent to our Privacy Policy and agree to its terms.</p>\r\n\r\n      <h2>Information we collect</h2>\r\n\r\n      <p>The personal information that you are asked to provide, and the reasons why you are asked to provide it, will\r\n        be made clear to you at the point we ask you to provide your personal information.</p>\r\n      <p>If you contact us directly, we may receive additional information about you such as your name, email address,\r\n        phone number, the contents of the message and/or attachments you may send us, and any other information you may\r\n        choose to provide.</p>\r\n      <p>When you register for an Account, we may ask for your contact information, including items such as name,\r\n        company name, address, email address, and telephone number.</p>\r\n\r\n      <h2>How we use your information</h2>\r\n\r\n      <p>We use the information we collect in various ways, including to:</p>\r\n\r\n      <ul>\r\n        <li>Provide, operate, and maintain our website</li>\r\n        <li>Improve, personalize, and expand our website</li>\r\n        <li>Understand and analyze how you use our website</li>\r\n        <li>Develop new products, services, features, and functionality</li>\r\n        <li>Communicate with you, either directly or through one of our partners, including for customer service, to\r\n          provide you with updates and other information relating to the website, and for marketing and promotional\r\n          purposes\r\n        </li>\r\n        <li>Send you emails</li>\r\n        <li>Find and prevent fraud</li>\r\n      </ul>\r\n\r\n      <h2>Log Files</h2>\r\n\r\n      <p>B12J follows a standard procedure of using log files. These files log visitors when they visit websites. All\r\n        hosting companies do this and a part of hosting services' analytics. The information collected by log files\r\n        include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp,\r\n        referring/exit pages, and possibly the number of clicks. These are not linked to any information that is\r\n        personally identifiable. The purpose of the information is for analyzing trends, administering the site,\r\n        tracking users' movement on the website, and gathering demographic information.</p>\r\n\r\n      <h2>Cookies and Web Beacons</h2>\r\n\r\n      <p>Like any other website, B12J uses 'cookies'. These cookies are used to store information including visitors'\r\n        preferences, and the pages on the website that the visitor accessed or visited. The information is used to\r\n        optimize the users' experience by customizing our web page content based on visitors' browser type and/or other\r\n        information.</p>\r\n\r\n      <p>For more general information on cookies, please read <a href=\"https://www.generateprivacypolicy.com/#cookies\">\"Cookies\"\r\n        article from the Privacy Policy Generator</a>.</p>\r\n\r\n\r\n      <h2>Advertising Partners Privacy Policies</h2>\r\n\r\n      <p>You may consult this list to find the Privacy Policy for each of the advertising partners of B12J.</p>\r\n\r\n      <p>Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used\r\n        in their respective advertisements and links that appear on B12J, which are sent directly to users' browser.\r\n        They automatically receive your IP address when this occurs. These technologies are used to measure the\r\n        effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on\r\n        websites that you visit.</p>\r\n\r\n      <p>Note that B12J has no access to or control over these cookies that are used by third-party advertisers.</p>\r\n\r\n      <h2>Third Party Privacy Policies</h2>\r\n\r\n      <p>B12J's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the\r\n        respective Privacy Policies of these third-party ad servers for more detailed information. It may include their\r\n        practices and instructions about how to opt-out of certain options. </p>\r\n\r\n      <p>You can choose to disable cookies through your individual browser options. To know more detailed information\r\n        about cookie management with specific web browsers, it can be found at the browsers' respective websites.</p>\r\n\r\n      <h2>CCPA Privacy Rights (Do Not Sell My Personal Information)</h2>\r\n\r\n      <p>Under the CCPA, among other rights, California consumers have the right to:</p>\r\n      <p>Request that a business that collects a consumer's personal data disclose the categories and specific pieces of\r\n        personal data that a business has collected about consumers.</p>\r\n      <p>Request that a business delete any personal data about the consumer that a business has collected.</p>\r\n      <p>Request that a business that sells a consumer's personal data, not sell the consumer's personal data.</p>\r\n      <p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights,\r\n        please contact us.</p>\r\n\r\n      <h2>GDPR Data Protection Rights</h2>\r\n\r\n      <p>We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to\r\n        the following:</p>\r\n      <p>The right to access – You have the right to request copies of your personal data. We may charge you a small fee\r\n        for this service.</p>\r\n      <p>The right to rectification – You have the right to request that we correct any information you believe is\r\n        inaccurate. You also have the right to request that we complete the information you believe is incomplete.</p>\r\n      <p>The right to erasure – You have the right to request that we erase your personal data, under certain\r\n        conditions.</p>\r\n      <p>The right to restrict processing – You have the right to request that we restrict the processing of your\r\n        personal data, under certain conditions.</p>\r\n      <p>The right to object to processing – You have the right to object to our processing of your personal data, under\r\n        certain conditions.</p>\r\n      <p>The right to data portability – You have the right to request that we transfer the data that we have collected\r\n        to another organization, or directly to you, under certain conditions.</p>\r\n      <p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights,\r\n        please contact us.</p>\r\n\r\n      <h2>Children's Information</h2>\r\n\r\n      <p>Another part of our priority is adding protection for children while using the internet. We encourage parents\r\n        and guardians to observe, participate in, and/or monitor and guide their online activity.</p>\r\n\r\n      <p>B12J does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you\r\n        think that your child provided this kind of information on our website, we strongly encourage you to contact us\r\n        immediately and we will do our best efforts to promptly remove such information from our records.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivacyPolicy;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { urls } from \"../../configuration\";\r\nimport EmailSent from \"./emailSent\";\r\nimport PrivacyPolicy from \"./privacyPolicy\";\r\n\r\n\r\nconst OthersRoute = () => {\r\n   return (\r\n      <Switch>\r\n         <Route path={urls.emailSent} component={EmailSent} />\r\n         <Route path={urls.privacyPolicy} component={PrivacyPolicy} />\r\n      </Switch>\r\n   );\r\n};\r\n\r\nexport default OthersRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { css } from \"../../main_css\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { urls } from \"../../configuration\";\r\nimport { Table } from \"../../components/customTags\";\r\n\r\nconst LeftSideBar = () => {\r\n   const { contestActs, tutorialActs } = useContext(SuperContext);\r\n   let tutorials = tutorialActs.getListPage(1);\r\n   let contestList = contestActs.getListPage(1);\r\n   contestList = contestList.slice(0, Math.min(contestList.length, 5));\r\n   tutorials = tutorials.slice(0, Math.min(tutorials.length, 5));\r\n   let contestData = [],\r\n      tutorialData = [];\r\n\r\n   for (let contest of contestList) {\r\n      contestData.push([\r\n         <Link to={`${urls.contests}/${contest.id}`} className={\"white-link\"}>\r\n            {`${contest.title.slice(0, 25)}${contest.title.length > 25 ? \"...\": \"\"}`}\r\n         </Link>,\r\n      ]);\r\n   }\r\n   for (let tutorial of tutorials) {\r\n      tutorialData.push([\r\n         <Link className={\"white-link\"} to={`/tutorials/${tutorial.id}`}>\r\n            {tutorial.title.slice(0, 15)}\r\n         </Link>,\r\n      ]);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div className={\"d-none d-lg-block float-start m-2\"} style={{width: \"100%\"}}>\r\n            <div className={css.heading4}>Latest Contests</div>\r\n            <Table headers={[]} body={contestData} />\r\n\r\n            <div className={css.heading4 + \" mt-2\"}>Latest Tutorials</div>\r\n            <Table headers={[]} body={tutorialData} />\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default LeftSideBar;\r\n","import React from \"react\";\r\n// import { css } from \"../../main_css\";\r\n// import { Table } from \"../../components/customTags\";\r\n\r\nconst RightSideBar = () => {\r\n   return (\r\n      <div>\r\n         {/*<div className=\"width-100 d-none d-xxl-block float-end\">*/}\r\n         {/*   <div className={css.heading4}>Latest News</div>*/}\r\n         {/*   <Table body={[[\"Nice to know\"], [\"Now working\"], [\"Continue\"]]} headers={[]} />*/}\r\n\r\n         {/*   <div className={css.heading4}>Top solvers</div>*/}\r\n         {/*   <Table headers={[]} body={[[\"Mahmudul Alam\"]]} />*/}\r\n         {/*</div>*/}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default RightSideBar;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { FormattedHtml } from \"../../components/helperFunctions\";\r\nimport { urls } from \"../../configuration\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\n\r\nconst Tutorial = ({ match }) => {\r\n   const { tutorialActs} = useContext(SuperContext);\r\n   const { tutorialId } = match.params;\r\n   const tutorial = tutorialActs.getById(tutorialId);\r\n   const userId = getCurrentUser() && getCurrentUser().id;\r\n\r\n   return (\r\n      tutorial && (\r\n         <div className=\"container\">\r\n            {userId && tutorial.by === userId && (\r\n               <div>\r\n                  <Link to={`${urls.editTutorial}/${tutorialId}`} className={\"btn btn-warning\"}>\r\n                     Edit\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <div className=\"row pt-2 pb-5\">\r\n               <div className=\"col\">\r\n                  <Link to={\"/tutorials\"} className={\"white-link\"}>\r\n                     Back\r\n                  </Link>\r\n               </div>\r\n               <h1 className={\"col-auto display-4 fw-bold text-secondary rounded-3\"}>{tutorial.title}</h1>\r\n               <div className=\"col\" />\r\n            </div>\r\n\r\n            <div>\r\n               {tutorial.notice && <div className=\"alert alert-info\">{tutorial.notice}</div>}\r\n               <FormattedHtml text={tutorial.text} />\r\n            </div>\r\n\r\n            {/*<CommentSection commentList={commentList} commentCat={\"tutorial\"} />*/}\r\n         </div>\r\n      )\r\n   );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { urls } from \"../../configuration\";\r\nimport { pagination } from \"../../components/helperFunctions\";\r\nimport { Table } from \"../../components/customTags\";\r\n\r\nconst TutorialList = ({ match }) => {\r\n   const page = parseInt(match.params.page) || 1;\r\n   const { tutorialActs, userActs } = useContext(SuperContext);\r\n   const tutorials = tutorialActs.getListPage(page);\r\n   const pages = tutorialActs.totalPages();\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         {renderTutorialList(tutorials, userActs)}\r\n         {pagination(`${urls.tutorials}/page=`, pages, page)}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorialList;\r\n\r\nexport const renderTutorialList = (tutorials, userActs) => {\r\n   const data = [];\r\n   for (let tutorial of tutorials) {\r\n      data.push([\r\n         <Link to={`${urls.tutorials}/${tutorial.id}`}>{tutorial.title}</Link>,\r\n         userActs.fullName(tutorial.user),\r\n      ]);\r\n   }\r\n   return <Table headers={[\"Name\", \"Writer\"]} body={data} />;\r\n};\r\n","import React from \"react\";\r\nimport BaseForm from \"./baseForms\";\r\nimport { renderColX } from \"../helperFunctions\";\r\nimport Joi from \"joi\";\r\nimport { serverUrls, urls } from \"../../configuration\";\r\n\r\nclass TutorialForm extends BaseForm {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  }\r\n  schema = {\r\n    title: Joi.string().min(5).max(255),\r\n    hidden_till: Joi.date(),\r\n    contest: Joi.number().min(1).required(),\r\n    problem: Joi.number().min(1).required(),\r\n    text: Joi.string().min(100).required(),\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.tutorial) {\r\n      this.setState({ data: { ...this.state.data, ...this.props.tutorial } });\r\n    }\r\n  }\r\n\r\n  doSubmit = () => {\r\n    this.doSubmitHelper(serverUrls.tutorials, urls.tutorials, \"Saving Tutorial\");\r\n  };\r\n\r\n  render() {\r\n    const {contests, problems} = this.props;\r\n    return (\r\n      <form method={\"post\"} onSubmit={this.handleSubmit}>\r\n        {this.renderInput(\"title\", \"Tutorial Title\")}\r\n        {this.renderInput(\"hidden_till\", \"When will be published\", \"datetime-local\")}\r\n        {renderColX([\r\n          this.renderAutoCompleteSelect(\"contest\", \"Contest\", contests, \"id\", \"title\"),\r\n          this.renderAutoCompleteSelect(\"problem\", \"Problem\", problems, \"id\", \"title\"),\r\n        ])}\r\n        {this.renderTextEditor(\"text\", \"Tutorial Body\")}\r\n        {this.renderSubmitButton(\"Submit Tutorial\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TutorialForm;","import React, { useContext } from \"react\";\r\nimport { SuperContext } from \"../../context\";\r\nimport TutorialForm from \"../../components/forms/tutorialForm\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { urls } from \"../../configuration\";\r\n\r\nconst AddEditTutorial = ({ history, match }) => {\r\n  const { id } = match.params;\r\n  const { contestActs, problemActs, tutorialActs } = useContext(SuperContext);\r\n  const tutorial = tutorialActs.getById(id);\r\n  const problems = problemActs.getAllList();\r\n  const contests = contestActs.getAllList();\r\n\r\n  if (!getCurrentUser()) {\r\n    history.push(urls.login);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!tutorial && <div>\r\n        <h1>Add new contest</h1>\r\n        <TutorialForm contests={contests} problems={problems} history={history} />\r\n      </div>}\r\n      {tutorial &&\r\n      <div>\r\n        <h1>{tutorial.title}</h1>\r\n        <TutorialForm contests={contests} problems={problems} history={history} tutorial={tutorial} />\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEditTutorial;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Tutorial from \"./tutorial\";\r\nimport TutorialList from \"./tutorialList\";\r\nimport { urls } from \"../../configuration\";\r\nimport AddEditTutorial from \"./addEditTutorial\";\r\n\r\nconst TutorialRoute = () => {\r\n   return (\r\n      <Switch>\r\n         <Route path={`${urls.tutorials}/page=:page`} component={TutorialList} />\r\n         <Route path={`${urls.addTutorial}`} component={AddEditTutorial} />\r\n         <Route path={`${urls.editTutorial}/:id`} component={AddEditTutorial} />\r\n         <Route path={`${urls.tutorials}/:tutorialId`} component={Tutorial} />\r\n         <Route path={urls.tutorials} component={TutorialList} />\r\n      </Switch>\r\n   );\r\n};\r\n\r\nexport default TutorialRoute;\r\n","import React from \"react\";\r\nimport BaseForm from \"./baseForms\";\r\nimport Joi from \"joi\";\r\nimport httpService from \"../httpService\";\r\nimport { apiEndpoint, serverUrls } from \"../../configuration\";\r\nimport { startLoading } from \"../loadingAnimation\";\r\nimport { getCurrentUser } from \"../authService\";\r\n\r\nclass ChangeUsernameForm extends BaseForm {\r\n  state = {\r\n    data: {new_username: getCurrentUser().username},\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    new_username: Joi.string().alphanum().min(4).max(10),\r\n    current_password: Joi.string().required().min(4).max(32)\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      startLoading(\"Changing username\");\r\n      await httpService.post(`${apiEndpoint}${serverUrls.changeUsername}/`, this.state.data);\r\n      console.log(`${apiEndpoint}${serverUrls.updateUser}/`)\r\n      window.location.reload();\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors, ...ex.response.data };\r\n        this.setState({ errors });\r\n        console.log(ex)\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} method={\"post\"}>\r\n        {this.renderNonFieldError()}\r\n        {this.renderInput(\"new_username\", \"New Username\")}\r\n        {this.renderInput(\"current_password\", \"Current Password\", \"password\")}\r\n        {this.renderSubmitButton(\"Change Username\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangeUsernameForm;","import React from \"react\";\r\nimport Joi from \"joi\";\r\nimport { startLoading } from \"../loadingAnimation\";\r\nimport httpService from \"../httpService\";\r\nimport { apiEndpoint, serverUrls } from \"../../configuration\";\r\nimport BaseForm from \"./baseForms\";\r\n\r\nclass ChangePasswordForm extends BaseForm {\r\n  state = {\r\n    data: { },\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    new_password: Joi.string().min(4).max(10),\r\n    current_password: Joi.string().required().min(4).max(32)\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      startLoading(\"Changing username\");\r\n      await httpService.post(`${apiEndpoint}${serverUrls.changePassword}/`, this.state.data);\r\n      window.location.reload();\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors, ...ex.response.data };\r\n        this.setState({ errors });\r\n        console.log(ex);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} method={\"post\"}>\r\n        {this.renderNonFieldError()}\r\n        {this.renderInput(\"new_password\", \"New Password\")}\r\n        {this.renderInput(\"current_password\", \"Current Password\", \"password\")}\r\n        {this.renderSubmitButton(\"Change Password\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePasswordForm;","import React from \"react\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { urls } from \"../../configuration\";\r\nimport { Slide } from \"react-awesome-reveal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChangeUsernameForm from \"../../components/forms/changeUsernameForm\";\r\nimport ChangePasswordForm from \"../../components/forms/changePasswordForm\";\r\n\r\nconst Profile = ({ history }) => {\r\n  const user = getCurrentUser();\r\n\r\n  if (!user) {\r\n    history.push(urls.login);\r\n  }\r\n\r\n  const toggleHide = elementId => {\r\n    const element = document.getElementById(elementId);\r\n    if (element.style.display === \"none\") {\r\n      element.style.display = \"block\";\r\n    } else {\r\n      element.style.display = \"none\";\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Slide>\r\n        <p className={\"text-center display-3 fw-bold\"}>Hey, {user.name}</p>\r\n      </Slide>\r\n      <div className=\"row\" id={\"add-new\"}>\r\n        <div className=\"col-auto p-2\">\r\n          <Link to={urls.addProblem} className=\"btn btn-outline-dark\">\r\n            New problem\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-auto p-2\">\r\n          <a href={urls.addTutorial} className=\"btn btn-outline-dark\">\r\n            New tutorial\r\n          </a>\r\n        </div>\r\n        <div className=\"col-auto p-2\">\r\n          <a href={urls.addContest} className=\"btn btn-outline-dark\">\r\n            Start Contest\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n          <div className={\"row\"}>\r\n            <h2 className={\"text-info display-4\"}>Your Statistics</h2>\r\n            <p className={\"fw-bold h4 col-auto\"}>Problems Solved: 10</p>\r\n            <p className={\"fw-bold h4 col-auto\"}>Problems Wrote: 10</p>\r\n            <p className={\"fw-bold h4 col-auto\"}>Tutorial Wrote: 10</p>\r\n            <p className={\"fw-bold h4 col-auto\"}>Contest Writer: 10</p>\r\n            <p className={\"fw-bold h4 col-auto\"}>Contest Tester: 10</p>\r\n          </div>\r\n          <div className={\"\"}>\r\n            <h2 className={\"text-info display-4\"}>Your Info</h2>\r\n            <p className={\"fw-bold h4\"}>Username: {user.username}</p>\r\n            <p className={\"fw-bold h4\"}>First Name: {user.first_name}</p>\r\n            <p className={\"fw-bold h4\"}>Last Name: {user.last_name}</p>\r\n            <p className={\"fw-bold h4\"}>Email: {user.email}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 bg-light\">\r\n          <div style={{\"width\": \"300px\"}}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"300px\" height=\"300px\" fill=\"currentColor\"\r\n                 className=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n              <path fill-rule=\"evenodd\"\r\n                    d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\" id={\"add-new\"}>\r\n        <div className=\"col-auto p-2\">\r\n          <button type={\"button\"} className=\"btn btn-outline-dark\" onClick={() => toggleHide(\"changeUsername\")}>\r\n            Change Username\r\n          </button>\r\n        </div>\r\n        <div className=\"col-auto p-2\">\r\n          <button disabled={true} type={\"button\"} className=\"btn btn-outline-dark\">\r\n            Change Password\r\n          </button>\r\n        </div>\r\n        <div className=\"col-auto p-2\">\r\n          <button disabled={true} type={\"button\"} className=\"btn btn-outline-dark\">\r\n            Change Password\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div id={\"changeUsername\"} style={{ \"display\": \"none\" }}>\r\n        <ChangeUsernameForm />\r\n      </div>\r\n      <div id={\"changePassword\"} style={{ \"display\": \"none\" }}>\r\n        <ChangePasswordForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React, { useEffect, useState } from \"react\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { apiEndpoint, urls } from \"../../configuration\";\r\nimport http from \"../../components/httpService\";\r\nimport { startLoading } from \"../../components/loadingAnimation\";\r\nimport { renderProblemList } from \"../problem/problemList\";\r\n\r\nconst UnsolvedProblems = ({ history }) => {\r\n  const [unsolvedProblem, setUnsolvedProblem] = useState([]);\r\n\r\n  const user = getCurrentUser();\r\n  if (!user) history.push(urls.login);\r\n\r\n  useEffect(() => {\r\n    const apiCall = async () => {\r\n      startLoading(\"Loading Unsolved problems\");\r\n      const unsolvedProblemData = await http.get(`${apiEndpoint}/problems/?unsolved_problems=true`);\r\n      setUnsolvedProblem(unsolvedProblemData.data.results);\r\n    };\r\n    apiCall();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {renderProblemList(unsolvedProblem, urls.problems)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnsolvedProblems;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { apiEndpoint, urls } from \"../../configuration\";\r\nimport { startLoading } from \"../../components/loadingAnimation\";\r\nimport http from \"../../components/httpService\";\r\nimport { renderTutorialList } from \"../tutorial/tutorialList\";\r\nimport { SuperContext } from \"../../context\";\r\n\r\nconst ProfileTutorials = ({history}) => {\r\n  const { userActs } = useContext(SuperContext);\r\n  const [userTutorialList, setUserTutorialList] = useState([]);\r\n  const user = getCurrentUser();\r\n  if (!user) history.push(urls.login);\r\n\r\n  useEffect(() => {\r\n    const apiCall = async () => {\r\n      startLoading(\"Loading Tutorial set by user\");\r\n      const userTutorialData = await http.get(`${apiEndpoint}/tutorials/?user_tutorials=true&limit=10`);\r\n      setUserTutorialList(userTutorialData.data.results);\r\n    };\r\n    apiCall();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {renderTutorialList(userTutorialList, userActs)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileTutorials;","import React, { useEffect, useState } from \"react\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { apiEndpoint, urls } from \"../../configuration\";\r\nimport { startLoading } from \"../../components/loadingAnimation\";\r\nimport http from \"../../components/httpService\";\r\nimport { renderProblemList } from \"../problem/problemList\";\r\n\r\nconst UserProblems = ({ history }) => {\r\n  const [userProbList, setUserProbList] = useState([]);\r\n\r\n  const user = getCurrentUser();\r\n  if (!user) history.push(urls.login);\r\n\r\n  useEffect(() => {\r\n    const apiCall = async () => {\r\n      startLoading(\"Loading Problem set by user\");\r\n      const userProblemData = await http.get(`${apiEndpoint}/problems/?user_problems=true&limit=10`);\r\n      setUserProbList(userProblemData.data.results);\r\n    };\r\n    apiCall();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {renderProblemList(userProbList, urls.problems)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProblems;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { startLoading } from \"../../components/loadingAnimation\";\r\nimport http from \"../../components/httpService\";\r\nimport { apiEndpoint, urls } from \"../../configuration\";\r\nimport { renderSubmissionList } from \"../submission/submissionList\";\r\nimport { SuperContext } from \"../../context\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\n\r\nconst UserSubmissions = ({ history }) => {\r\n  const { userActs } = useContext(SuperContext);\r\n  const [userSubmissionList, setUserSubmissionList] = useState([]);\r\n\r\n  const user = getCurrentUser();\r\n  if (!user) history.push(urls.login);\r\n\r\n  useEffect(() => {\r\n    const apiCall = async () => {\r\n      startLoading(\"Loading Users submissions\");\r\n      const userSubmissionData = await http.get(`${apiEndpoint}/submissions/?user_id=${user.user_id}&limit=10`);\r\n      setUserSubmissionList(userSubmissionData.data.results);\r\n    };\r\n    apiCall();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {renderSubmissionList(userSubmissionList, userActs)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSubmissions;","import React, { useEffect, useState } from \"react\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { apiEndpoint, urls } from \"../../configuration\";\r\nimport { startLoading } from \"../../components/loadingAnimation\";\r\nimport http from \"../../components/httpService\";\r\nimport { Table } from \"../../components/customTags\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { extractDate } from \"../others/functions\";\r\n\r\nconst ProfileContest = ({ history }) => {\r\n  const [userContest, setUserContest] = useState([]);\r\n\r\n  const user = getCurrentUser();\r\n  if (!user) history.push(urls.login);\r\n  useEffect(() => {\r\n    const apiCall = async () => {\r\n      startLoading(\"Loading Contests set by user\");\r\n      const userContestData = await http.get(`${apiEndpoint}/contests/?user_contests=true&limit=10`);\r\n      setUserContest(userContestData.data.results);\r\n    };\r\n    apiCall();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const contestData = [];\r\n  for (let contest of userContest) {\r\n    contestData.push([\r\n      <Link to={`${urls.contests}/${contest.id}`}>{contest.title}</Link>,\r\n      extractDate(contest.date),\r\n      <a href={`${urls.editContest}/${contest.id}`} className=\"btn-sm btn-warning me-2\">\r\n        Edit\r\n      </a>\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table headers={[\"Title\", \"Date\", \"Buttons\"]} body={contestData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileContest;","import React, { useEffect, useState } from \"react\";\r\nimport { getCurrentUser } from \"../../components/authService\";\r\nimport { apiEndpoint, urls } from \"../../configuration\";\r\nimport { startLoading } from \"../../components/loadingAnimation\";\r\nimport http from \"../../components/httpService\";\r\nimport { renderProblemList } from \"../problem/problemList\";\r\n\r\nconst TestProblems = ({ history }) => {\r\n  const [testProblem, setTestProblem] = useState([]);\r\n\r\n  const user = getCurrentUser();\r\n  if (!user) history.push(urls.login);\r\n\r\n  useEffect(() => {\r\n    const apiCall = async () => {\r\n      startLoading(\"Loading Testable problems\");\r\n      const testProblemData = await http.get(`${apiEndpoint}/problems/?test_problems=true&limit=10`);\r\n      setTestProblem(testProblemData.data.results);\r\n    };\r\n    apiCall();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {renderProblemList(testProblem, urls.problems)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestProblems;","import React from \"react\";\r\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { urls } from \"../../configuration\";\r\nimport Profile from \"./profile\";\r\nimport UnsolvedProblems from \"./unsolvedProblems\";\r\nimport ProfileTutorials from \"./profileTutorials\";\r\nimport UserProblems from \"./userProblems\";\r\nimport UserSubmissions from \"./userSubmissions\";\r\nimport ProfileContest from \"./profileContest\";\r\nimport TestProblems from \"./testProblems\";\r\n\r\nconst ProfileRoute = () => {\r\n  return (\r\n    <div>\r\n      <ProfileNav />\r\n      <Switch>\r\n        <Route path={urls.testProblems} component={TestProblems} />\r\n        <Route path={urls.profileTutorials} component={ProfileTutorials} />\r\n        <Route path={urls.profileContests} component={ProfileContest} />\r\n        <Route path={urls.profileSubmissions} component={UserSubmissions} />\r\n        <Route path={urls.profileProblems} component={UserProblems} />\r\n        <Route path={urls.unsolvedProblems} component={UnsolvedProblems} />\r\n        <Route path={urls.profile} component={Profile} />\r\n      </Switch>\r\n      <Route exact path={urls.profile}>\r\n        <Redirect exact from={urls.profile} to={urls.mainProfile} />\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileRoute;\r\n\r\nconst ProfileNav = () => {\r\n  return <nav className={\"navbar navbar-expand bg-white d-inline\"} id={\"navBar2\"}>\r\n    <ul className=\"navbar-nav row\">\r\n      <li className=\"nav-item col-auto m-1\">\r\n        <NavLink className=\"nav-link btn-sm fw-bold btn-outline-dark border-0\" to={urls.mainProfile}>\r\n          Main\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item col-auto m-1\">\r\n        <NavLink className=\"nav-link btn-sm fw-bold btn-outline-dark border-0\" to={urls.unsolvedProblems}>\r\n          Unsolved Problems\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item col-auto m-1\">\r\n        <NavLink className=\"nav-link btn-sm fw-bold btn-outline-dark border-0\" to={urls.profileTutorials}>\r\n          Tutorials\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item col-auto m-1\">\r\n        <NavLink className=\"nav-link btn-sm fw-bold btn-outline-dark border-0\" to={urls.profileProblems}>\r\n          Problems\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item col-auto m-1\">\r\n        <NavLink className=\"nav-link btn-sm fw-bold btn-outline-dark border-0\" to={urls.profileSubmissions}>\r\n          Submissions\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item col-auto m-1\">\r\n        <NavLink className=\"nav-link btn-sm fw-bold btn-outline-dark border-0\" to={urls.profileContests}>\r\n          Contests\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item col-auto m-1\">\r\n        <NavLink className=\"nav-link btn btn-sm fw-bold btn-outline-dark border-0\" to={urls.testProblems}>\r\n          Testable Problems\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>;\r\n};","import \"./index.css\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { urls } from \"./configuration\";\r\nimport UserRoute from \"./apps/user/userRoute\";\r\n\r\nimport { SuperContext } from \"./context\";\r\nimport Home from \"./apps/others/home\";\r\nimport Footer from \"./apps/others/footer\";\r\nimport ContestRoute from \"./apps/contest/contestRoute\";\r\nimport ProblemRoute from \"./apps/problem/problemRoute\";\r\nimport NavBar from \"./apps/others/navBar\";\r\nimport SubmissionRoute from \"./apps/submission/submissionRoute\";\r\nimport OthersRoute from \"./apps/others/othersRoute\";\r\nimport LeftSideBar from \"./apps/others/leftSideBar\";\r\nimport RightSideBar from \"./apps/others/rightSideBar\";\r\nimport TutorialRoute from \"./apps/tutorial/tutorialRoute\";\r\nimport ProfileRoute from \"./apps/profile/profileRoute\";\r\n\r\nconst App = () => {\r\n  const [refresh, setRefresh] = useState(false);\r\n  const { userActs } = useContext(SuperContext);\r\n\r\n  let unSub = userActs.store.subscribe(() => {\r\n    setTimeout(() => {\r\n      setRefresh(!refresh);\r\n      unSub();\r\n    }, 20);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route path={urls.home} component={Home} />\r\n        <div className={\"row\"}>\r\n          <div className={\" d-none d-lg-block float-start m-2\"} style={{ width: \"240px\" }}>\r\n            <LeftSideBar />\r\n          </div>\r\n          <div className={\"col\"}>\r\n            <Switch>\r\n              <Route path={urls.contests} component={ContestRoute} />\r\n              <Route path={urls.problems} component={ProblemRoute} />\r\n              <Route path={urls.others} component={OthersRoute} />\r\n              <Route path={urls.submissions} component={SubmissionRoute} />\r\n              <Route path={urls.tutorials} component={TutorialRoute} />\r\n              <Route path={urls.profile} component={ProfileRoute} />\r\n              <Route path={urls.users} component={UserRoute} />\r\n            </Switch>\r\n          </div>\r\n          <div className={\"col-2 d-none d-xxl-block float-end\"}>\r\n            <RightSideBar />\r\n          </div>\r\n        </div>\r\n      </Switch>\r\n      <Route exact path={\"/\"}>\r\n        <Redirect exact from={\"/\"} to={\"/home\"} />\r\n      </Route>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport { BrowserRouter} from \"react-router-dom\";\r\nimport { getJwt, verifyUpdateAccessToken } from \"./components/authService\";\r\nimport { wssURL } from \"./configuration\";\r\nimport { SuperContext } from \"./context\";\r\nimport WebSocketReceive from \"./store/webSocketReceive\";\r\nimport storeFunc from \"./store/configureStore\";\r\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\r\nimport { contestActions } from \"./store/data/contests\";\r\nimport { problemActions } from \"./store/data/problems\";\r\nimport { problemDiscussionActions } from \"./store/data/problemDiscussion\";\r\nimport { submissionActions } from \"./store/data/submissions\";\r\nimport { tutorialActions } from \"./store/data/tutorials\";\r\nimport { tutorialDiscussionActions } from \"./store/data/tutorialDiscussion\";\r\nimport { userActions } from \"./store/data/users\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport \"./index.css\";\r\nimport \"./quill.css\"\r\nimport LoadingAnimation from \"./components/loadingAnimation\";\r\nimport App from \"./app\";\r\n\r\nconst generateData = () => {\r\n  const store = storeFunc();\r\n  const ws = new ReconnectingWebSocket(`${wssURL()}/`, \"\", {\r\n    maxReconnectionDelay: 60000,\r\n    minReconnectionDelay: 500\r\n  });\r\n\r\n  const contestActs = new contestActions(store, ws);\r\n  const problemActs = new problemActions(store, ws);\r\n  const problemDiscussionActs = new problemDiscussionActions(store, ws);\r\n  const submissionActs = new submissionActions(store, ws);\r\n  const tutorialActs = new tutorialActions(store, ws);\r\n  const tutorialDiscussionActs = new tutorialDiscussionActions(store, ws);\r\n  const userActs = new userActions(store, ws);\r\n  return {\r\n    contestActs,\r\n    problemActs,\r\n    problemDiscussionActs,\r\n    store,\r\n    submissionActs,\r\n    tutorialActs,\r\n    tutorialDiscussionActs,\r\n    userActs,\r\n    ws\r\n  };\r\n};\r\n\r\nconst ParentApp = () => {\r\n  const data = generateData();\r\n  useEffect(() => {\r\n    if (getJwt()) {\r\n      verifyUpdateAccessToken();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <SuperContext.Provider value={data}>\r\n      <div>\r\n        <LoadingAnimation />\r\n        <WebSocketReceive />\r\n        <App />\r\n      </div>\r\n    </SuperContext.Provider>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <ParentApp />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducer\";\r\nimport api from \"./api\";\r\n\r\nexport default function storeFunc() {\r\n   return configureStore({\r\n      reducer,\r\n      middleware: [...getDefaultMiddleware(), api],\r\n   });\r\n}\r\n"],"sourceRoot":""}